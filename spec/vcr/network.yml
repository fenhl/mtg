---
http_interactions:
- request:
    method: get
    uri: http://magic.wizards.com/en/articles/archive/top-decks/evolving-mana-bases-2016-04-15
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Content-Type:
      - text/html; charset=utf-8
      X-Drupal-Cache:
      - MISS
      Etag:
      - '"1460975961-0"'
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SameOrigin
      Content-Language:
      - en
      X-Generator:
      - Drupal 7 (http://drupal.org)
      Link:
      - <http://magic.wizards.com/en/articles/archive/top-decks/evolving-mana-bases-2016-04-15>;
        rel="canonical",<http://magic.wizards.com/en/node/1017211>; rel="shortlink"
      Cache-Control:
      - public, max-age=900
      Last-Modified:
      - Mon, 18 Apr 2016 10:39:21 GMT
      Expires:
      - Sun, 19 Nov 1978 05:00:00 GMT
      Vary:
      - Cookie,Accept-Encoding
      X-Request-Id:
      - v-cfe6c090-0551-11e6-b638-22000a868328
      X-Ah-Environment:
      - prod
      Content-Length:
      - '26273'
      Accept-Ranges:
      - bytes
      Date:
      - Mon, 18 Apr 2016 10:43:22 GMT
      X-Varnish:
      - 2020742151 2020714053
      Age:
      - '240'
      Via:
      - 1.1 varnish
      Connection:
      - keep-alive
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '10'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8"/><script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(e,t,n){function r(n){if(!t[n]){var o=t[n]={exports:{}};e[n][0].call(o.exports,function(t){var o=e[n][1][t];return r(o||t)},o,o.exports)}return t[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(e,t,n){function r(e,t){return function(){o(e,[(new Date).getTime()].concat(a(arguments)),null,t)}}var o=e("handle"),i=e(2),a=e(3);"undefined"==typeof window.newrelic&&(newrelic=NREUM);var u=["setPageViewName","addPageAction","setCustomAttribute","finished","addToTrace","inlineHit"],c=["addPageAction"],f="api-";i(u,function(e,t){newrelic[t]=r(f+t,"api")}),i(c,function(e,t){newrelic[t]=r(f+t)}),t.exports=newrelic,newrelic.noticeError=function(e){"string"==typeof e&&(e=new Error(e)),o("err",[e,(new Date).getTime()])}},{}],2:[function(e,t,n){function r(e,t){var n=[],r="",i=0;for(r in e)o.call(e,r)&&(n[i]=t(r,e[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],3:[function(e,t,n){function r(e,t,n){t||(t=0),"undefined"==typeof n&&(n=e?e.length:0);for(var r=-1,o=n-t||0,i=Array(0>o?0:o);++r<o;)i[r]=e[t+r];return i}t.exports=r},{}],ee:[function(e,t,n){function r(){}function o(e){function t(e){return e&&e instanceof r?e:e?u(e,a,i):i()}function n(n,r,o){e&&e(n,r,o);for(var i=t(o),a=l(n),u=a.length,c=0;u>c;c++)a[c].apply(i,r);var s=f[g[n]];return s&&s.push([m,n,r,i]),i}function p(e,t){w[e]=l(e).concat(t)}function l(e){return w[e]||[]}function d(e){return s[e]=s[e]||o(n)}function v(e,t){c(e,function(e,n){t=t||"feature",g[n]=t,t in f||(f[t]=[])})}var w={},g={},m={on:p,emit:n,get:d,listeners:l,context:t,buffer:v};return m}function i(){return new r}var a="nr@context",u=e("gos"),c=e(2),f={},s={},p=t.exports=o();p.backlog=f},{}],gos:[function(e,t,n){function r(e,t,n){if(o.call(e,t))return e[t];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,t,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return e[t]=r,r}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],handle:[function(e,t,n){function r(e,t,n,r){o.buffer([e],r),o.emit(e,t,n)}var o=e("ee").get("handle");t.exports=r,r.ee=o},{}],id:[function(e,t,n){function r(e){var t=typeof e;return!e||"object"!==t&&"function"!==t?-1:e===window?0:a(e,i,function(){return o++})}var o=1,i="nr@id",a=e("gos");t.exports=r},{}],loader:[function(e,t,n){function r(){if(!w++){var e=v.info=NREUM.info,t=s.getElementsByTagName("script")[0];if(e&&e.licenseKey&&e.applicationID&&t){c(l,function(t,n){e[t]||(e[t]=n)});var n="https"===p.split(":")[0]||e.sslForHttp;v.proto=n?"https://":"http://",u("mark",["onload",a()],null,"api");var r=s.createElement("script");r.src=v.proto+e.agent,t.parentNode.insertBefore(r,t)}}}function o(){"complete"===s.readyState&&i()}function i(){u("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var u=e("handle"),c=e(2),f=window,s=f.document;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:f.XMLHttpRequest,REQ:f.Request,EV:f.Event,PR:f.Promise,MO:f.MutationObserver},e(1);var p=""+location,l={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-918.min.js"},d=window.XMLHttpRequest&&XMLHttpRequest.prototype&&XMLHttpRequest.prototype.addEventListener&&!/CriOS/.test(navigator.userAgent),v=t.exports={offset:a(),origin:p,features:{},xhrWrappable:d};s.addEventListener?(s.addEventListener("DOMContentLoaded",i,!1),f.addEventListener("load",r,!1)):(s.attachEvent("onreadystatechange",o),f.attachEvent("onload",r)),u("mark",["firstbyte",a()],null,"api");var w=0},{}]},{},["loader"]);</script>
  <title>Evolving Mana Bases | MAGIC: THE GATHERING</title>

  <meta name="viewport"
        content="width=device-width, user-scalable=no, initial-scale=1, maximum-scale=1"/>
  <meta name="format-detection" content="telephone=no"/>
	<meta name="google-site-verification" content="WquIfqfWtlm2X62GTeJ-5vDtRrbOVOIT6mFc3vAP5BQ" />

  <link rel="icon" type="image/png" href="/sites/all/themes/wiz_mtg/icons/touch-icon-144.png"/>
  <link rel="shortcut icon" type="image/x-icon" href="/sites/all/themes/wiz_mtg/icons/favicon.ico"/>
  <link rel="apple-touch-icon-precomposed" href="/sites/all/themes/wiz_mtg/icons/touch-icon-57.png"/>
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="/sites/all/themes/wiz_mtg/icons/touch-icon-72.png"/>
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="/sites/all/themes/wiz_mtg/touch-icon-114.png"/>
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="/sites/all/themes/wiz_mtg/icons/touch-icon-144.png"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="shortcut icon" href="http://magic.wizards.com/sites/all/themes/wiz_mtg/favicon.ico" type="image/vnd.microsoft.icon" />
<script type="text/javascript">var _sf_startpt=(new Date()).getTime();</script>
<meta name="description" content="LSV examines the mana bases for two- and three-color decks in the post-rotation Standard." />
<meta name="generator" content="Drupal 7 (http://drupal.org)" />
<link rel="canonical" href="http://magic.wizards.com/en/articles/archive/top-decks/evolving-mana-bases-2016-04-15" />
<link rel="shortlink" href="http://magic.wizards.com/en/node/1017211" />
<meta property="og:site_name" content="MAGIC: THE GATHERING" />
<meta property="og:type" content="article" />
<meta property="og:url" content="http://magic.wizards.com/en/articles/archive/top-decks/evolving-mana-bases-2016-04-15" />
<meta property="og:title" content="Evolving Mana Bases" />
<meta property="og:description" content="LSV examines the mana bases for two- and three-color decks in the post-rotation Standard." />
<meta property="og:image" content="http://magic.wizards.com/sites/mtg/files/images/hero/TD20160415_icon.jpg" />
  <link type="text/css" rel="stylesheet" href="http://magic.wizards.com/sites/mtg/files/css/css_xE-rWrJf-fncB6ztZfd2huxqgxu4WO-qwma6Xer30m4.css" media="all" />
<link type="text/css" rel="stylesheet" href="http://magic.wizards.com/sites/mtg/files/css/css_DHcXHPYBSjIVaCQZEG4ZlpLkvslnFlBCnQUCzlbRBio.css" media="all" />
<link type="text/css" rel="stylesheet" href="http://magic.wizards.com/sites/mtg/files/css/css_lSKXYZIAeUSlMB-hlkYpJ_qukJOzfOUpWJ3BZL5O_Lo.css" media="all" />
<link type="text/css" rel="stylesheet" href="http://magic.wizards.com/sites/mtg/files/css/css_8nG4Z-zizk63V2lzZQx4wndU3irNUQb-oS-3PgU9X7M.css" media="all" />
<link type="text/css" rel="stylesheet" href="http://magic.wizards.com/sites/mtg/files/css/css_AsLzUO33fdh7VNz9FZyu9vz9W90sIArulCJpCmwz8_4.css" media="all" />
<link type="text/css" rel="stylesheet" href="http://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic,700,700italic,800,800italic" media="all" />
<link type="text/css" rel="stylesheet" href="//cdn.datatables.net/1.10.5/css/jquery.dataTables.css" media="all" />
<link type="text/css" rel="stylesheet" href="//cdn.datatables.net/responsive/1.0.4/css/dataTables.responsive.css" media="all" />
  <script type="text/javascript" src="http://magic.wizards.com/sites/mtg/files/js/js_Bua3V7s16xhn2yjwAWIH8Q0UCvf3SgluOlYdKTEQLZ0.js"></script>
<script type="text/javascript" src="http://magic.wizards.com/sites/mtg/files/js/js_gCXw6L5rIDJME29Rlz4GAxqmES__wEcM6Hej53BvUKM.js"></script>
<script type="text/javascript" src="http://magic.wizards.com/sites/mtg/files/js/js_8JOozDMdqSBxFNEuo81wOiwZ2ACcUDvQ8KtiKj2_2nw.js"></script>
<script type="text/javascript" src="http://magic.wizards.com/sites/mtg/files/js/js_4htl2VgpzIj2B3aww45pGXUIUUlgqQT-NqvGPCiFjbI.js"></script>
<script type="text/javascript">
<!--//--><![CDATA[//><!--
var _gaq = _gaq || [];_gaq.push(["_setAccount", "UA-15020098-13"]);_gaq.push(["_trackPageview"]);(function() {var ga = document.createElement("script");ga.type = "text/javascript";ga.async = true;ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";var s = document.getElementsByTagName("script")[0];s.parentNode.insertBefore(ga, s);})();
//--><!]]>
</script>
<script type="text/javascript" src="http://magic.wizards.com/sites/mtg/files/js/js_x6wjIiRxo-BcEpcukSnpp5rwfk5NnV3vEF4ZbMA1drM.js"></script>
<script type="text/javascript">
<!--//--><![CDATA[//><!--
jQuery.extend(Drupal.settings, { "pathToTheme": "sites/all/themes/wiz_mtg" });
//--><!]]>
</script>
<script type="text/javascript" src="https://accounts.wizards.com/Widget/Widget.js"></script>
<script type="text/javascript" src="http://magic.wizards.com/sites/mtg/files/js/js_caFl5nxl5W8KucRNEKpyvU4OqvzoGWhCBVrN5Zs_nLc.js"></script>
<script type="text/javascript" src="http://magic.wizards.com/sites/mtg/files/js/js_PNOMyvJutM7m92Ou2Q_TDM1GdjgzFsh1JdnpfdwGmnw.js"></script>
<script type="text/javascript" src="//cdn.datatables.net/1.10.5/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="//cdn.datatables.net/responsive/1.0.4/js/dataTables.responsive.js"></script>
<script type="text/javascript" src="http://archive.wizards.com/mx/clicktracker.js?1460975962"></script>
<script type="text/javascript">
<!--//--><![CDATA[//><!--
jQuery.extend(Drupal.settings, {"basePath":"\/","pathPrefix":"en\/","ajaxPageState":{"theme":"wiz_mtg","theme_token":"uUJJOKMGVpmoRqnqRa1k6HglIlFluguzpJ6zY0H_cLU","jquery_version":"1.8","js":{"sites\/all\/themes\/wiz_mtg\/js\/ShareButton.js":1,"sites\/all\/modules\/features\/wiz_bean_content_deck_list\/wiz_bean_content_deck_list.js":1,"sites\/all\/modules\/features\/wiz_bean_content_deck_list\/masonry.pkgd.min.js":1,"sites\/all\/modules\/contrib\/jquery_update\/replace\/jquery\/1.8\/jquery.min.js":1,"misc\/jquery.once.js":1,"misc\/drupal.js":1,"sites\/all\/modules\/contrib\/jquery_update\/replace\/ui\/ui\/minified\/jquery.ui.core.min.js":1,"sites\/all\/modules\/contrib\/jquery_update\/replace\/ui\/ui\/minified\/jquery.ui.widget.min.js":1,"sites\/all\/modules\/contrib\/jquery_update\/replace\/ui\/external\/jquery.cookie.js":1,"sites\/all\/modules\/contrib\/jquery_update\/replace\/misc\/jquery.form.min.js":1,"sites\/all\/modules\/contrib\/jquery_update\/replace\/ui\/ui\/minified\/jquery.ui.mouse.min.js":1,"sites\/all\/modules\/contrib\/jquery_update\/replace\/ui\/ui\/minified\/jquery.ui.draggable.min.js":1,"misc\/ajax.js":1,"sites\/all\/modules\/contrib\/jquery_update\/js\/jquery_update.js":1,"sites\/all\/modules\/custom\/wiz_autocard\/js\/wiz_autocard.js":1,"sites\/all\/modules\/custom\/wiz_autocard\/js\/jquery.qtip-1.0.0-rc3.min.js":1,"sites\/all\/modules\/features\/wiz_bean_content_community_links\/js\/community.js":1,"sites\/all\/modules\/features\/wiz_bean_content_community_mosaic\/js\/community.js":1,"sites\/all\/modules\/features\/wiz_bean_content_deck_list\/d3.v3.min.js":1,"sites\/all\/modules\/features\/wiz_bean_content_deck_list\/wiz_bean_content_deck_list.charts.js":1,"sites\/all\/modules\/custom\/wiz_autocard\/wiz_decklist_filter\/js\/wiz_decklist_filter.js":1,"sites\/all\/modules\/custom\/wiz_show_period\/js\/moment.min.js":1,"sites\/all\/modules\/features\/wiz_views_events_calendar\/js\/idangerous.swiper-2.1.min.js":1,"sites\/all\/modules\/features\/wiz_views_events_calendar\/js\/idangerous.swiper.scrollbar-2.1.js":1,"sites\/all\/modules\/features\/wiz_views_events_calendar\/js\/custom.js":1,"misc\/progress.js":1,"sites\/all\/modules\/contrib\/ctools\/js\/modal.js":1,"sites\/all\/modules\/contrib\/modal_forms\/js\/modal_forms_popup.js":1,"sites\/all\/modules\/contrib\/panels\/js\/panels.js":1,"sites\/all\/modules\/custom\/wiz_deletecookies\/js\/deletecookies.js":1,"sites\/all\/modules\/custom\/wiz_deletecookies\/js\/jquery.cookie.js":1,"sites\/all\/modules\/contrib\/google_analytics\/googleanalytics.js":1,"0":1,"sites\/all\/libraries\/foresee\/foresee-trigger.js":1,"1":1,"https:\/\/accounts.wizards.com\/Widget\/Widget.js":1,"sites\/all\/modules\/custom\/wiz_npsu\/js\/npsu_widget.js":1,"sites\/all\/themes\/wiz_mtg\/js\/image-comparison-slider.js":1,"sites\/all\/themes\/wiz_mtg\/js\/lib\/jquery.min.js":1,"sites\/all\/themes\/wiz_mtg\/js\/lib\/jquery-ui.js":1,"sites\/all\/themes\/wiz_mtg\/js\/lib\/content-gallery-grid\/modernizr.custom.js":1,"sites\/all\/themes\/wiz_mtg\/js\/lib\/jquery.fancybox.js":1,"sites\/all\/themes\/wiz_mtg\/js\/lib\/jquery.scrollbar.min.js":1,"sites\/all\/themes\/wiz_mtg\/js\/lib\/jquery.mmenu.oncanvas.js":1,"sites\/all\/themes\/wiz_mtg\/js\/lib\/jquery.columnlist.min.js":1,"sites\/all\/themes\/wiz_mtg\/js\/lib\/dropdown.js":1,"sites\/all\/themes\/wiz_mtg\/js\/lib\/owl.carousel.js":1,"sites\/all\/themes\/wiz_mtg\/js\/lib\/stacktable.js":1,"sites\/all\/themes\/wiz_mtg\/js\/lib\/arketype.js":1,"sites\/all\/themes\/wiz_mtg\/js\/immersive-experience-homepage.js":1,"sites\/all\/themes\/wiz_mtg\/js\/immersive-experience-event.js":1,"sites\/all\/themes\/wiz_mtg\/js\/interstitials.js":1,"sites\/all\/themes\/wiz_mtg\/js\/inline-features.js":1,"sites\/all\/themes\/wiz_mtg\/js\/MainMenu.js":1,"sites\/all\/themes\/wiz_mtg\/js\/ParallaxBackground.js":1,"sites\/all\/themes\/wiz_mtg\/js\/ShowHideListItems.js":1,"sites\/all\/themes\/wiz_mtg\/js\/core.js":1,"sites\/all\/themes\/wiz_mtg\/js\/mx.js":1,"\/\/cdn.datatables.net\/1.10.5\/js\/jquery.dataTables.min.js":1,"\/\/cdn.datatables.net\/responsive\/1.0.4\/js\/dataTables.responsive.js":1,"http:\/\/archive.wizards.com\/mx\/clicktracker.js?1460975962":1},"css":{"modules\/system\/system.base.css":1,"modules\/system\/system.menus.css":1,"modules\/system\/system.messages.css":1,"modules\/system\/system.theme.css":1,"misc\/ui\/jquery.ui.core.css":1,"misc\/ui\/jquery.ui.theme.css":1,"sites\/all\/modules\/contrib\/calendar\/css\/calendar_multiday.css":1,"sites\/all\/modules\/contrib\/date\/date_api\/date.css":1,"sites\/all\/modules\/contrib\/date\/date_popup\/themes\/datepicker.1.7.css":1,"modules\/field\/theme\/field.css":1,"sites\/all\/modules\/contrib\/mollom\/mollom.css":1,"modules\/node\/node.css":1,"modules\/search\/search.css":1,"modules\/user\/user.css":1,"sites\/all\/modules\/features\/wiz_views_events_calendar\/css\/idangerous.swiper.css":1,"sites\/all\/modules\/features\/wiz_views_events_calendar\/css\/idangerous.swiper.scrollbar.css":1,"sites\/all\/modules\/contrib\/views\/css\/views.css":1,"sites\/all\/modules\/contrib\/ckeditor\/css\/ckeditor.css":1,"\/css\/tabs.css":1,"sites\/all\/modules\/contrib\/chartbeat\/chartbeat.css":1,"sites\/all\/modules\/contrib\/ctools\/css\/ctools.css":1,"sites\/all\/modules\/contrib\/ctools\/css\/modal.css":1,"sites\/all\/modules\/contrib\/modal_forms\/css\/modal_forms_popup.css":1,"sites\/all\/modules\/contrib\/panels\/css\/panels.css":1,"sites\/all\/modules\/custom\/wiz_npsu_mtg\/css\/npsu_mtg.css":1,"sites\/all\/modules\/custom\/wiz_npsu\/css\/npsu.css":1,"sites\/all\/themes\/wiz_mtg\/css\/jquery.fancybox.css":1,"sites\/all\/themes\/wiz_mtg\/css\/jquery-ui-mod.css":1,"sites\/all\/themes\/wiz_mtg\/css\/owl.carousel.css":1,"sites\/all\/themes\/wiz_mtg\/css\/scrollbars.css":1,"sites\/all\/themes\/wiz_mtg\/css\/fonts.css":1,"sites\/all\/themes\/wiz_mtg\/css\/core.css":1,"sites\/all\/themes\/wiz_mtg\/css\/header.css":1,"sites\/all\/themes\/wiz_mtg\/css\/footer.css":1,"sites\/all\/themes\/wiz_mtg\/css\/page-header.css":1,"sites\/all\/themes\/wiz_mtg\/css\/inline-features.css":1,"sites\/all\/themes\/wiz_mtg\/css\/medias.css":1,"sites\/all\/themes\/wiz_mtg\/css\/search.css":1,"sites\/all\/themes\/wiz_mtg\/css\/decklist.css":1,"sites\/all\/themes\/wiz_mtg\/css\/articles.css":1,"sites\/all\/themes\/wiz_mtg\/css\/game-info.css":1,"sites\/all\/themes\/wiz_mtg\/css\/events.css":1,"sites\/all\/themes\/wiz_mtg\/css\/community.css":1,"sites\/all\/themes\/wiz_mtg\/css\/mx.css":1,"sites\/all\/themes\/wiz_mtg\/css\/sections\/immersive.css":1,"sites\/all\/themes\/wiz_mtg\/css\/sections\/interstitials.css":1,"sites\/all\/themes\/wiz_mtg\/css\/legacy.css":1,"sites\/all\/themes\/wiz_mtg\/css\/legacyStyles.css":1,"http:\/\/fonts.googleapis.com\/css?family=Open+Sans:300,300italic,400,400italic,600,600italic,700,700italic,800,800italic":1,"\/\/cdn.datatables.net\/1.10.5\/css\/jquery.dataTables.css":1,"\/\/cdn.datatables.net\/responsive\/1.0.4\/css\/dataTables.responsive.css":1}},"chartbeat":{"uid":51341,"domain":"http:\/\/magiccv2stg.prod.acquia-sites.com\/","useCanonical":true,"noCookies":false},"CToolsModal":{"loadingText":"Loading...","closeText":"Close Window","closeImage":"\u003Cimg typeof=\u0022foaf:Image\u0022 src=\u0022http:\/\/magic.wizards.com\/sites\/all\/modules\/contrib\/ctools\/images\/icon-close-window.png\u0022 alt=\u0022Close window\u0022 title=\u0022Close window\u0022 \/\u003E","throbber":"\u003Cimg typeof=\u0022foaf:Image\u0022 src=\u0022http:\/\/magic.wizards.com\/sites\/all\/modules\/contrib\/ctools\/images\/throbber.gif\u0022 alt=\u0022Loading\u0022 title=\u0022Loading...\u0022 \/\u003E"},"modal-popup-small":{"modalSize":{"type":"fixed","width":300,"height":300},"modalOptions":{"opacity":0.85,"background":"#000"},"animation":"fadeIn","modalTheme":"ModalFormsPopup","throbber":"\u003Cimg typeof=\u0022foaf:Image\u0022 src=\u0022http:\/\/magic.wizards.com\/sites\/all\/modules\/contrib\/modal_forms\/images\/loading_animation.gif\u0022 alt=\u0022Loading...\u0022 title=\u0022Loading\u0022 \/\u003E","closeText":"Close"},"modal-popup-medium":{"modalSize":{"type":"fixed","width":330,"height":450},"modalOptions":{"opacity":0.85,"background":"#000"},"animation":"fadeIn","modalTheme":"ModalFormsPopup","throbber":"\u003Cimg typeof=\u0022foaf:Image\u0022 src=\u0022http:\/\/magic.wizards.com\/sites\/all\/modules\/contrib\/modal_forms\/images\/loading_animation.gif\u0022 alt=\u0022Loading...\u0022 title=\u0022Loading\u0022 \/\u003E","closeText":"Close"},"modal-popup-large":{"modalSize":{"type":"scale","width":0.8,"height":0.8},"modalOptions":{"opacity":0.85,"background":"#000"},"animation":"fadeIn","modalTheme":"ModalFormsPopup","throbber":"\u003Cimg typeof=\u0022foaf:Image\u0022 src=\u0022http:\/\/magic.wizards.com\/sites\/all\/modules\/contrib\/modal_forms\/images\/loading_animation.gif\u0022 alt=\u0022Loading...\u0022 title=\u0022Loading\u0022 \/\u003E","closeText":"Close"},"wiz_core":{"wiz_core_switch_in_days":14,"wiz_core_switch_in_visits":10,"wiz_core_switch_b_path":"home"},"googleanalytics":{"trackOutbound":1,"trackMailto":1,"trackDownload":1,"trackDownloadExtensions":"7z|aac|arc|arj|asf|asx|avi|bin|csv|doc|exe|flv|gif|gz|gzip|hqx|jar|jpe?g|js|mp(2|3|4|e?g)|mov(ie)?|msi|msp|pdf|phps|png|ppt|qtm?|ra(m|r)?|sea|sit|tar|tgz|torrent|txt|wav|wma|wmv|wpd|xls|xml|z|zip"},"npsu_widget":{"enabled":true,"logged_in":"false"}});
//--><!]]>
</script>

  
        <style>
      @media all {
        header .home span {
          background: url(http://magic.wizards.com/sites/mtg/files/logo-magic.png) no-repeat;
          background-size: 100% 100px;

        }
        #mobile-menu .header .logo a {
          background: url(http://magic.wizards.com/sites/mtg/files/logo-magic.png);
          background-size: 100% 100%;
        }
        #page.snap-menu header .home span {
          background: url(http://magic.wizards.com/sites/mtg/files/logo-magic.png);
          background-size: 100% 50px;
        }
      }
      @media (max-width: 1200px) {
        header .home span {
          background: url(http://magic.wizards.com/sites/mtg/files/logo-magic.png);
          background-size: 100% 50px;
        }
      }
    </style>
  	
</head>

<body class="html not-front not-logged-in no-sidebars page-node page-node- page-node-1017211 node-type-article i18n-en content-non-panels role-anonymous-user with-subnav page-articles-archive-top-decks-evolving-mana-bases-2016-04-15 section-articles" >
  <script>
  /* Interstitials variables */
  var Interstitials = {
    list: [
                        ]
  };
  </script>

  <div id="page" class="section_articles article_detail">
    
        <div id="mobile-menu">
  <div class="header">
    <div class="logo"></div>
    <div class="toggle-menu-button"></div>
  </div>
  <nav>
    <div class="menu-wrapper" data-back-label="Back"></div>
  </nav>
</div>

<div id="viewport">
  <!-- Header -->
  <header>
    <div class="wrapper">
      <div id="utils">
        <a href="http://locator.wizards.com/" class="locator">Locator</a> <a href="http://gatherer.wizards.com" class="gatherer">Gatherer</a>        <a href="/en" title="Sign In" onClick="_gaq.push([&#039;_trackEvent&#039;, &#039;SignIn&#039;, &#039;Click&#039;, &#039;Top-Menu&#039;]); return wotcAccountWidget.showLoginModal();" id="SignInButton" class="login">Sign In</a> | <a href="/en" title="Sign Up" onClick="_gaq.push([&#039;_trackEvent&#039;, &#039;Signup&#039;, &#039;Click&#039;, &#039;Top-Menu&#039;]); return wotcAccountWidget.showJoinModal();" id="RegisterButton" class="register">Sign Up</a>        <div id="search-form">
          <form action="/en/articles/archive/top-decks/evolving-mana-bases-2016-04-15" method="post" id="wiz-search-bar-form--2" accept-charset="UTF-8"><div><input type="hidden" name="search-site" value="acquia_search" />
<div class="form-item form-type-textfield form-item-search-string">
 <input placeholder="Search Anything" type="text" id="edit-search-string--3" name="search-string" value="" size="25" maxlength="128" class="form-text required" />
</div>
<input type="submit" id="edit-search-button--3" name="op" value="Search" class="form-submit" /><input type="hidden" name="form_build_id" value="form-nzzOKu_7PEMKgVCj07ruiXzKYUD5EnSStaHwF0vLxaU" />
<input type="hidden" name="form_id" value="wiz_search_bar_form" />
</div></form>        </div>
      </div>

      <!-- Menu -->
      <nav id="menu">
        <a class="home" href="/en"><span>Magic the Gathering</span></a>

        <div class="menu-wrapper">
          <ul class="menu"><li class="mn_section_new-to-magic has-children"><a href="/en/content/new-magic-1" title="Are you new to Magic? This is the place to start!"><span>NEW TO MAGIC?</span></a><ul class="menu"><li class="hub-link NEW TO MAGIC?"><a href="/en/content/new-magic-1" title="Are you new to Magic? This is the place to start!"><span>NEW TO MAGIC?</span></a></li>
<li class="mn_section_strategy"><a href="/en/content/strategy"><span>Strategy</span></a></li>
<li class="mn_section_lore"><a href="/en/content/new-to-magic/lore"><span>Lore</span></a></li>
<li class="mn_section_community"><a href="/en/content/new-to-magic/community"><span>Community</span></a></li>
</ul></li>
<li class="mn_section_game-info has-children"><a href="/en/game-information"><span>GAME INFO</span></a><ul class="menu"><li class="hub-link GAME INFO"><a href="/en/game-information"><span>GAME INFO</span></a></li>
<li class="mn_section_gameplay has-children"><a class="nolink"><span>GAMEPLAY</span></a><ul class="menu"><li class="mn_section_about-the-game"><a href="/en/game-info/gameplay/about-the-game"><span>ABOUT THE GAME</span></a></li>
<li class="mn_section_how-to-play"><a href="/en/game-info/gameplay/how-to-play"><span>HOW TO PLAY</span></a></li>
<li class="mn_section_how-to-build-a-deck"><a href="/en/game-info/gameplay/how-to-build-a-deck"><span>HOW TO BUILD A DECK</span></a></li>
<li class="mn_section_improve-your-game"><a href="/en/game-info/gameplay/improve-your-game"><span>IMPROVE YOUR GAME</span></a></li>
<li class="mn_section_rules-&-formats"><a href="/en/game-info/gameplay/rules-and-formats"><span>RULES & FORMATS</span></a></li>
</ul></li>
<li class="mn_section_products has-children"><a class="nolink"><span>PRODUCTS</span></a><ul class="menu"><li class="mn_section_featured-<br>releases"><a href="/en/game-info/products/featured-releases"><span>FEATURED <BR>RELEASES</span></a></li>
<li class="mn_section_coming-soon"><a href="/en/game-info/products/coming-soon"><span>COMING SOON</span></a></li>
<li class="mn_section_magic-duels"><a href="/en/content/magic-duels"><span>MAGIC DUELS</span></a></li>
<li class="mn_section_magic-online"><a href="/en/content/magic-online-products-game-info"><span>MAGIC ONLINE</span></a></li>
<li class="mn_section_card-set-archive"><a href="/en/game-info/products/card-set-archive"><span>CARD SET ARCHIVE</span></a></li>
<li class="mn_section_merch-"><a href="http://www.mtgmerch.com/" title=""><span>MERCH </span></a></li>
</ul></li>
<li class="mn_section_story has-children"><a class="nolink"><span>STORY</span></a><ul class="menu"><li class="mn_section_magic's-story"><a href="/en/game-info/story/magic-story"><span>MAGIC'S STORY</span></a></li>
<li class="mn_section_planeswalkers"><a href="/en/game-info/story/planeswalkers"><span>PLANESWALKERS</span></a></li>
<li class="mn_section_planes"><a href="/en/game-info/story/planes"><span>PLANES</span></a></li>
</ul></li>
</ul></li>
<li class="mn_section_events has-children"><a href="/en/events"><span>EVENTS</span></a><ul class="menu"><li class="hub-link EVENTS"><a href="/en/events"><span>EVENTS</span></a></li>
<li class="mn_section_events-home"><a href="/en/events"><span>EVENTS HOME</span></a></li>
<li class="mn_section_what-is-<br>organized-play"><a href="/en/events/what-is-organized-play"><span>WHAT IS <br>ORGANIZED PLAY?</span></a></li>
<li class="mn_section_event<br>-types"><a href="/en/events/event-types"><span>EVENT<br> TYPES</span></a></li>
<li class="mn_section_coverage has-children"><a class="nolink"><span>COVERAGE</span></a><ul class="menu"><li class="mn_section_coverage-archive"><a href="/en/events/coverage"><span>COVERAGE ARCHIVE</span></a></li>
<li class="mn_section_top-players"><a href="/en/events/coverage/top-players"><span>TOP PLAYERS</span></a></li>
</ul></li>
<li class="mn_section_schedules"><a href="/en/events/premier-calendar#/overview"><span>SCHEDULES</span></a></li>
<li class="mn_section_resources has-children"><a class="nolink"><span>RESOURCES</span></a><ul class="menu"><li class="mn_section_planeswalker-points"><a href="/en/events/resources/planeswalker-points"><span>PLANESWALKER POINTS</span></a></li>
<li class="mn_section_judges"><a href="/en/events/resources/judges"><span>JUDGES</span></a></li>
</ul></li>
</ul></li>
<li class="mn_section_articles has-children current"><a href="/en/articles" class="active-trail"><span>ARTICLES</span></a><ul class="menu"><li class="hub-link ARTICLES"><a href="/en/articles"><span>ARTICLES</span></a></li>
<li class="mn_section_articles-home"><a href="/en/articles"><span>ARTICLES HOME</span></a></li>
<li class="mn_section_columns has-children"><a id="columns" class="nolink"><span>COLUMNS</span></a><ul class="menu"><li class="mn_section_columnists"><a href="/en/articles/columns/columnists"><span>COLUMNISTS</span></a></li>
<li class="mn_section_making-magic"><a href="/en/articles/columns/making-magic-archive"><span>MAKING MAGIC</span></a></li>
<li class="mn_section_magic-story"><a href="/en/articles/columns/magic-story-archive"><span>MAGIC STORY</span></a></li>
<li class="mn_section_top-decks"><a href="/en/articles/columns/top-decks-archive"><span>TOP DECKS</span></a></li>
<li class="mn_section_organized-<br>play"><a href="/en/articles/columns/organized-play-archive" title="Organized Play"><span>ORGANIZED <br>PLAY</span></a></li>
<li class="mn_section_latest-<br>developments"><a href="/en/articles/columns/latest-developments-archive"><span>LATEST <br>DEVELOPMENTS</span></a></li>
</ul></li>
<li class="mn_section_archives current"><a href="/en/articles/archive" class="active-trail"><span>ARCHIVES</span></a></li>
<li class="mn_section_winning-decks"><a href="/en/articles/winning-decks"><span>WINNING DECKS</span></a></li>
<li class="mn_section_media has-children"><a class="nolink"><span>MEDIA</span></a><ul class="menu"><li class="mn_section_videos"><a href="/en/articles/media/videos"><span>VIDEOS</span></a></li>
<li class="mn_section_podcasts"><a href="/en/articles/media/podcasts"><span>PODCASTS</span></a></li>
<li class="mn_section_wallpapers"><a href="/en/articles/media/wallpapers"><span>WALLPAPERS</span></a></li>
</ul></li>
</ul></li>
<li class="mn_section_community has-children"><a href="/en/community"><span>COMMUNITY</span></a><ul class="menu"><li class="hub-link COMMUNITY"><a href="/en/community"><span>COMMUNITY</span></a></li>
<li class="mn_section_community-home"><a href="/en/community"><span>COMMUNITY HOME</span></a></li>
<li class="mn_section_fan-kits"><a href="/en/community/fan-kits"><span>FAN KITS</span></a></li>
</ul></li>
<li class="mn_section_my-accounts"><a href="/en/content/my-accounts"><span>MY ACCOUNTS</span></a></li>
</ul>        </div>
      </nav>
    </div>
  </header>

  
  <div id="content-wrapper">
      <div class="region region-content">
    
<div id="block-system-main" class=" block block-system block-odd first last main clearfix">
  <div class="block-inner">
                <div class="content" >
      <div id="content" class="page-width">

  <div id="main-content">
    <div id="breadcrumb">
              <span ><a href="/en/articles">ARTICLES</a></span>
              <span ><a href="/en/articles/archive">ARCHIVES</a></span>
              <span class="current"><strong class="breadcrumb-no-link">Top Decks</strong></span>
          </div>
    <h1>Evolving Mana Bases</h1>
    <p class="posted-in">
      Posted in      <strong class="breadcrumb-no-link">Top Decks</strong>
      on April 15, 2016    </p>

    <!-- BEGIN :: ARTICLE -->
    <article>
      <div class="article-header">

                  <div class="author">
            <img src="http://magic.wizards.com/sites/mtg/files/styles/auth_small/public/images/person/authorpic_luisscott-vargas_0.jpg?itok=8AJkLkyU" alt="" />
            <p>By Luis Scott-Vargas </p>
            <p class="links">
                              <span><a href="javascript:void(0);" class="article-author-biography" onClick="_gaq.push(['_trackEvent', 'Article', 'Author', 'Luis Scott-Vargas -Bio']);">Bio</a></span>
                                            <span><a href="/en/articles/archive/116769" onClick="_gaq.push(['_trackEvent', 'Article', 'Author', 'Luis Scott-Vargas -Archive']);">Archive</a></span>
                                            <span><a href="http://twitter.com/lsv" onClick="_gaq.push(['_trackEvent', 'Article', 'Author', 'Luis Scott-Vargas -Twitter']);" target="_blank">Twitter</a></span>
                          </p>
            <div id="author-biography">
              <style>#author-biography { color: black; }</style>Luis Scott-Vargas plays, writes, and makes videos about Magic. He has played on the Pro Tour for almost a decade, and between that and producing content for ChannelFireball, often has his hands full (of cards).            </div>
          </div>
        
        <div class="sharing">
          <div class="share-article">Share Article</div>
          <div class="social-share">
            <a class="facebook" href="#" data-share-url="http://magic.wizards.com/articles/archive/top-decks/evolving-mana-bases-2016-04-15"><span class="share-count"></span><span>&nbsp;Shares</span></a>
            <a class="twitter" href="#" data-share-url="http://magic.wizards.com/articles/archive/top-decks/evolving-mana-bases-2016-04-15"><span class="share-count"></span><span>&nbsp;Tweets</span></a>
            <a class="google" href="#" data-share-url="http://magic.wizards.com/articles/archive/top-decks/evolving-mana-bases-2016-04-15"><span class="share-count"></span><span>&nbsp;+</span></a>
          </div>
        </div>
      </div>

      <!-- Content -->
      <div id="content-detail-page-of-an-article">
        <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<html><body><p>A good mana base is key to every <em>Magic</em> deck (except Manaless Dredge, but let's not go there&mdash;'tis a silly place). The rotation of <em>Khans of Tarkir</em> has a huge impact on the landscape of Standard, as we no longer get to play four-color decks without trouble. Here's what has departed:</p>

<p class="rtecenter"><img alt="" src="http://media.wizards.com/2016/images/daily/TD20160415_Wedge-Lands.png"></p>

<p>The tri-lands were key for decks that were split evenly among three colors, but even they took a back seat to the real MVPs: fetch lands.</p>

<p class="rtecenter"><img alt="" src="http://media.wizards.com/2016/images/daily/PL20160301_sofetch.png"></p>

<p>Between fetch lands and battle lands, playing four colors was a breeze, and even decks that would normally be three colors ended up as four due to interactions like wanting a <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Sunken+Hollow" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sunken+Hollow">Sunken Hollow</a> in your Abzan deck so your <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Flooded+Strand" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Flooded+Strand">Flooded Strand</a> fetched all your colors.</p>

<p>Where does that leave us now?</p>

<p>Here are the most relevant lands available:</p>

<p><strong>Enemy color pain lands plus enemy color creature lands</strong></p>

<p class="rtecenter"></p><div class="wiz-autocard-card"><div class="flip-wrapper"><a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Llanowar+Wastes" class="autocard-card-link"><img typeof="foaf:Image" src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Llanowar+Wastes" alt=""></a></div></div> <div class="wiz-autocard-card"><div class="flip-wrapper"><a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Hissing+Quagmire" class="autocard-card-link"><img typeof="foaf:Image" src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Hissing+Quagmire" alt=""></a></div></div>

<p><strong>Ally color battle lands plus ally color shadow lands</strong></p>

<p class="rtecenter"></p><div class="wiz-autocard-card"><div class="flip-wrapper"><a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Sunken+Hollow" class="autocard-card-link"><img typeof="foaf:Image" src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sunken+Hollow" alt=""></a></div></div> <div class="wiz-autocard-card"><div class="flip-wrapper"><a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Choked+Estuary" class="autocard-card-link"><img typeof="foaf:Image" src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Choked+Estuary" alt=""></a></div></div>

<p>Additionally, there are vanilla enters-the-battlefield-tapped lands for every color pair, in case you want more (albeit at a worse rate than any of the above lands).</p>

<p>The last piece of the puzzle when it comes to colors is <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?multiverseid=405218" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;multiverseid=405218">Evolving Wilds</a>, which is really getting its day in the sun.</p>

<p class="rtecenter"></p><div class="wiz-autocard-card"><div class="flip-wrapper"><a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?multiverseid=401872" class="autocard-card-link"><img typeof="foaf:Image" src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;multiverseid=401872" alt=""></a></div></div>

<p>What can we do with these lands as a base? Let's take a look at how a few decks might build their mana.</p>

<h1>Atarka Red</h1>

<p>Using the list that <a href="http://www.channelfireball.com/articles/atarka-red-reloaded" target="_blank">Brian DeMars wrote about</a>:</p>

<div class="page-width bean_block bean_block_deck_list bean--wiz-content-deck-list clearfix">

  <div class="content beanSpacing">

                                          <a name="brian_demars_atarka_red"></a>
        <div id="brian_demars_atarka_red" subid="57148bbd5a42b" class="deck-group">
                    <span class="deck-meta">
            <h4>Brian DeMars Atarka Red</h4>
            <h5>
                        </h5>
          </span>
                    <span class="decklist-icons">
              <form method="post" action="http://magic.wizards.com/decklist">
                 <input type="hidden" name="title" value=""><input type="hidden" name="content" value=""></form>
              <a class="download-icon" onclick="wiz_bean_content_deck_list_generate_file(this)">
                <img src="/sites/all/modules/features/wiz_bean_content_deck_list/icons/decklist_download.png"></a>
              <div class="bean_wiz_share"><div class="sharethis-wrapper"><span st_url="http://magic.wizards.com/en/articles/archive#brian_demars_atarka_red" st_title="temp" class="st_twitter" displaytext="Tweet"></span>
<span st_url="http://magic.wizards.com/en/articles/archive#brian_demars_atarka_red" st_title="temp" class="st_facebook" displaytext="Like"></span>
</div></div>
          </span>
                      <div class="subNav">
            <a href="#none" class="decklist">Decklist</a>
            <a href="#none" class="stats">Stats</a>
            <a href="#none" class="sample-hand">Sample Hand</a>
            <span><!--+--></span>
          </div>

                    <div class="toggle-text toggle-subnav">
                        <form>
              <div class="form-item form-type-select form-item-deck-list-sort-by">
                <label for="edit-deck-list-sort-by">Sort by:</label>
                <select class="form-select" name="deck-list-sort-by"><option selected value="overview">Overview</option><option value="color">Color</option><option value="cost">Cost</option><option value="rarity">Rarity</option></select></div>
            </form>
                                    <div class="deck-list-text">
                                            <div class="sorted-by-overview-container sortedContainer" style="">

              
      <div class="sorted-by-creature clearfix element">

                                                                                                                                                                                                                                                                
        <h5>Creature (18)</h5>

                                          <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BZurgo%5D+%5BBellstriker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Zurgo+Bellstriker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Zurgo Bellstriker</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BLightning%5D+%5BBerserker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Lightning+Berserker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Lightning Berserker</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BFalkenrath%5D+%5BGorger%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Falkenrath+Gorger" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Falkenrath Gorger</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAbbot%5D+%5Bof%5D+%5BKeral%5D+%5BKeep%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Abbot+of+Keral+Keep" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Abbot of Keral Keep</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BReckless%5D+%5BBushwhacker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Reckless+Bushwhacker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Reckless Bushwhacker</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPia%5D+%5Band%5D+%5BKiran%5D+%5BNalaar%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Pia+and+Kiran+Nalaar" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Pia and Kiran Nalaar</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-sorcery clearfix element">

                                                                                                
        <h5>Sorcery (8)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragon%5D+%5BFodder%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragon+Fodder" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragon Fodder</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BExquisite%5D+%5BFirecraft%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Exquisite+Firecraft" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Exquisite Firecraft</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-instant clearfix element">

                                                                                                
        <h5>Instant (8)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BTitan%5D+%5BStrength%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Titan%27s+Strength" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Titan's Strength</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAtarka%5D+%5BCommand%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Atarka%27s+Command" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Atarka's Command</a></span>
            </span>

                  
      </div>

                      
      <div class="sorted-by-land clearfix element">

                                                                                                                                                                                
        <h5>Land (21)</h5>

                                          <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BForest%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Forest" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Forest</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BGame%5D+%5BTrail%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Game+Trail" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Game Trail</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BCinder%5D+%5BGlade%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Cinder+Glade" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Cinder Glade</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">12</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BMountain%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Mountain" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Mountain</a></span>
            </span>

                  
      </div>

                
      <div class="sorted-by-Other clearfix element">

                                                                                                                                        
        <h5>Other (5)</h5>

                                          <span class="row">
              <span class="card-count">2</span>
              <span class="card-name">Village Messenger/Moonrise Intruder</span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name">Chandra, Fire of Kaladesh/Chandra, Roaring Flame</span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name">Arlinn Kord/Arlinn, Embraced by the Moon</span>
            </span>

                  
      </div>

        <div class="regular-card-total">60 Cards </div>
</div>

  
  <div class="sorted-by-sideboard-container  clearfix element">

                                            
    <h5>Sideboard (15)</h5>

          
        <span class="row">
          <span class="card-count">4</span>
          <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BThunderbreak%5D+%5BRegent%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Thunderbreak+Regent" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Thunderbreak Regent</a></span>
        </span>

                
        <span class="row">
          <span class="card-count">4</span>
          <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BHangarback%5D+%5BWalker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Hangarback+Walker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Hangarback Walker</a></span>
        </span>

                
        <span class="row">
          <span class="card-count">4</span>
          <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BFiery%5D+%5BImpulse%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Fiery+Impulse" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Fiery Impulse</a></span>
        </span>

                
        <span class="row">
          <span class="card-count">3</span>
          <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAct%5D+%5Bof%5D+%5BTreason%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Act+of+Treason" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Act of Treason</a></span>
        </span>

          
  </div>
                                                          <div class="sorted-by-color-container sortedContainer" style="display:none;">

                          
      <div class="sorted-by-red clearfix element">

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
        <h5>Red (41)</h5>

                                          <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BZurgo%5D+%5BBellstriker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Zurgo+Bellstriker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Zurgo Bellstriker</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BLightning%5D+%5BBerserker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Lightning+Berserker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Lightning Berserker</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BFalkenrath%5D+%5BGorger%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Falkenrath+Gorger" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Falkenrath Gorger</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAbbot%5D+%5Bof%5D+%5BKeral%5D+%5BKeep%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Abbot+of+Keral+Keep" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Abbot of Keral Keep</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BReckless%5D+%5BBushwhacker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Reckless+Bushwhacker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Reckless Bushwhacker</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPia%5D+%5Band%5D+%5BKiran%5D+%5BNalaar%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Pia+and+Kiran+Nalaar" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Pia and Kiran Nalaar</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BTitan%5D+%5BStrength%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Titan%27s+Strength" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Titan's Strength</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragon%5D+%5BFodder%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragon+Fodder" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragon Fodder</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BExquisite%5D+%5BFirecraft%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Exquisite+Firecraft" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Exquisite Firecraft</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BThunderbreak%5D+%5BRegent%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Thunderbreak+Regent" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Thunderbreak Regent</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BFiery%5D+%5BImpulse%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Fiery+Impulse" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Fiery Impulse</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAct%5D+%5Bof%5D+%5BTreason%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Act+of+Treason" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Act of Treason</a></span>
            </span>

                  
      </div>

                
      <div class="sorted-by-multi colored clearfix element">

                                                        
        <h5>Multi colored (4)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAtarka%5D+%5BCommand%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Atarka%27s+Command" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Atarka's Command</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-colorless clearfix element">

                                                                                                                                                                                                                                                                                                                                                
        <h5>Colorless (30)</h5>

                                          <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BForest%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Forest" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Forest</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BGame%5D+%5BTrail%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Game+Trail" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Game Trail</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BCinder%5D+%5BGlade%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Cinder+Glade" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Cinder Glade</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">12</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BMountain%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Mountain" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Mountain</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name">Village Messenger/Moonrise Intruder</span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name">Chandra, Fire of Kaladesh/Chandra, Roaring Flame</span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name">Arlinn Kord/Arlinn, Embraced by the Moon</span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BHangarback%5D+%5BWalker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Hangarback+Walker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Hangarback Walker</a></span>
            </span>

                  
      </div>

              <div class="regular-card-total">75 Cards </div>
</div>

              
                                            <div class="sorted-by-cost-container sortedContainer" style="display:none;">

              
      <div class="sorted-by- clearfix element">

                                                                                                                                        
        <h5> (5)</h5>

                                          <span class="row">
              <span class="card-count">2</span>
              <span class="card-name">Village Messenger/Moonrise Intruder</span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name">Chandra, Fire of Kaladesh/Chandra, Roaring Flame</span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name">Arlinn Kord/Arlinn, Embraced by the Moon</span>
            </span>

                  
      </div>

          
      <div class="sorted-by-1 clearfix element">

                                                                                                                                                                                                                        
        <h5>1 (16)</h5>

                                          <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BZurgo%5D+%5BBellstriker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Zurgo+Bellstriker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Zurgo Bellstriker</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BLightning%5D+%5BBerserker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Lightning+Berserker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Lightning Berserker</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BFalkenrath%5D+%5BGorger%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Falkenrath+Gorger" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Falkenrath Gorger</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BTitan%5D+%5BStrength%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Titan%27s+Strength" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Titan's Strength</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BFiery%5D+%5BImpulse%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Fiery+Impulse" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Fiery Impulse</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-2 clearfix element">

                                                                                                                                        
        <h5>2 (12)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAbbot%5D+%5Bof%5D+%5BKeral%5D+%5BKeep%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Abbot+of+Keral+Keep" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Abbot of Keral Keep</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAtarka%5D+%5BCommand%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Atarka%27s+Command" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Atarka's Command</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragon%5D+%5BFodder%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragon+Fodder" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragon Fodder</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-3 clearfix element">

                                                                                                                                        
        <h5>3 (11)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BReckless%5D+%5BBushwhacker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Reckless+Bushwhacker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Reckless Bushwhacker</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BExquisite%5D+%5BFirecraft%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Exquisite+Firecraft" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Exquisite Firecraft</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAct%5D+%5Bof%5D+%5BTreason%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Act+of+Treason" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Act of Treason</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-4 clearfix element">

                                                                                                
        <h5>4 (6)</h5>

                                          <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPia%5D+%5Band%5D+%5BKiran%5D+%5BNalaar%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Pia+and+Kiran+Nalaar" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Pia and Kiran Nalaar</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BThunderbreak%5D+%5BRegent%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Thunderbreak+Regent" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Thunderbreak Regent</a></span>
            </span>

                  
      </div>

        <div class="regular-card-total">50 Cards </div>
</div>

              
                                            <div class="sorted-by-rarity-container sortedContainer" style="display:none;">

        
      <div class="sorted-by-common clearfix element">

                                                                                                                                                                                                                                                                                                                                                                                        
        <h5>Common (33)</h5>

                                          <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BForest%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Forest" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Forest</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">12</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BMountain%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Mountain" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Mountain</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name">Village Messenger/Moonrise Intruder</span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name">Chandra, Fire of Kaladesh/Chandra, Roaring Flame</span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name">Arlinn Kord/Arlinn, Embraced by the Moon</span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BTitan%5D+%5BStrength%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Titan%27s+Strength" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Titan's Strength</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragon%5D+%5BFodder%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragon+Fodder" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragon Fodder</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BFiery%5D+%5BImpulse%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Fiery+Impulse" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Fiery Impulse</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAct%5D+%5Bof%5D+%5BTreason%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Act+of+Treason" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Act of Treason</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-uncommon clearfix element">

                                                                                                
        <h5>Uncommon (6)</h5>

                                          <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BLightning%5D+%5BBerserker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Lightning+Berserker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Lightning Berserker</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BReckless%5D+%5BBushwhacker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Reckless+Bushwhacker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Reckless Bushwhacker</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-rare clearfix element">

                                                                                                                                                                                                                                                                                                                                                                                        
        <h5>Rare (32)</h5>

                                          <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BZurgo%5D+%5BBellstriker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Zurgo+Bellstriker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Zurgo Bellstriker</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BGame%5D+%5BTrail%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Game+Trail" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Game Trail</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BFalkenrath%5D+%5BGorger%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Falkenrath+Gorger" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Falkenrath Gorger</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAbbot%5D+%5Bof%5D+%5BKeral%5D+%5BKeep%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Abbot+of+Keral+Keep" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Abbot of Keral Keep</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPia%5D+%5Band%5D+%5BKiran%5D+%5BNalaar%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Pia+and+Kiran+Nalaar" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Pia and Kiran Nalaar</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAtarka%5D+%5BCommand%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Atarka%27s+Command" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Atarka's Command</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BExquisite%5D+%5BFirecraft%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Exquisite+Firecraft" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Exquisite Firecraft</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BThunderbreak%5D+%5BRegent%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Thunderbreak+Regent" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Thunderbreak Regent</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BHangarback%5D+%5BWalker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Hangarback+Walker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Hangarback Walker</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-mythic clearfix element">

                                                        
        <h5>Mythic (4)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BCinder%5D+%5BGlade%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Cinder+Glade" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Cinder Glade</a></span>
            </span>

                  
      </div>

        <div class="regular-card-total">75 Cards </div>
</div>

              
                                                                      
            </div>
                        <div class="deck-list-img">
	            <div class="card-image">
					<img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Zurgo+Bellstriker" data-original="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Zurgo+Bellstriker"></div>
            </div>

          </div>

                    <div class="toggle-graphs toggle-subnav">
            <div class="deck-list-graphs">
              <div class="chart-stats">
                <div class="chart by-manacost"></div>
                <div class="chart by-color"></div>
                <div class="chart by-type"></div>
              </div>
            </div>
          </div>

                    <div class="toggle-samplehand toggle-subnav">
            <a href="/en" class="button sample-hand-redeal" data-href="ajax/wiz-sample-hand/wiz_decklist:06f49296615d95fef1c354d5ccee6bd8">Deal Another Hand</a>            <div id="responsivDIV">
              <div id="wiz_windowslider">                <ul class="allinone_carousel_list"><li data-title="Reckless Bushwhacker">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Reckless+Bushwhacker" border="0"></li>
                                          <li data-title="Mountain">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Mountain" border="0"></li>
                                          <li data-title="Dragon Fodder">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragon+Fodder" border="0"></li>
                                          <li data-title="Falkenrath Gorger">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Falkenrath+Gorger" border="0"></li>
                                          <li data-title="Titan's Strength">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Titan%27s+Strength" border="0"></li>
                                          <li data-title="Pia and Kiran Nalaar">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Pia+and+Kiran+Nalaar" border="0"></li>
                                          <li data-title="Game Trail">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Game+Trail" border="0"></li>
                                                      </ul></div>
            </div>
          </div>
          <!-- end Sample hand group ------------------- -->
        </div>

                
  </div>
</div>
<script type="text/javascript">
(function ($) {
  if(!Drupal.settings.wiz_bean_content_deck_list_stats) {
    Drupal.settings.wiz_bean_content_deck_list_stats = new Object();
  }
  Drupal.settings.wiz_bean_content_deck_list_stats['brian_demars_atarka_red'] = {"manacost":{"labels":[0,1,2,3,4],"counts":[25,16,12,11,6]},"color":{"colors":["#f28f78","#ffd778"],"labels":["Red","Multi-Colored"],"counts":[41,4],"icons":["sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/red.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/multiple.png"],"multicolors":["red","green"]},"type":{"colors":["#777777","#555555","#dddddd","#666666"],"labels":["Creature","Land","Instant","Sorcery"],"counts":[26,21,12,11],"icons":["sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/creature.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/land.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/instant.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/sorcery.png"]}};
})(jQuery);
</script><p>Atarka Red is feeling the loss of <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Wooded+Foothills" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Wooded+Foothills">Wooded Foothills</a> for sure, as this deck has nine green sources, many of which could enter the battlefield tapped on turn one. Even playing the basic Forest is painful, as <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Lightning+Berserker" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Lightning+Berserker">Lightning Berserker</a> is not a fan of trees.</p>

<p>What other options does an aggressive red deck have?</p>

<ol><li>Play mono-red. This simple step leads to the perfect mana base of 21 Mountains, but ends up costing significantly in card quality, as <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Atarka%27s+Command" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Atarka%27s+Command">Atarka's Command</a> is a big game.</li>
</ol><ol><li value="2">Play fewer green sources. It's possible to cut the Forest, though I wouldn't recommend doing so. Nine is already pretty low.</li>
</ol><ol><li value="3">Play one or two <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?multiverseid=405218" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;multiverseid=405218">Evolving Wilds</a>. Tapped lands are so brutal, but there's no other way to get to ten or eleven green sources without playing more Forests (which you can't really do).</li>
</ol><p>This mana base (and the loss of <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Monastery+Swiftspear" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Monastery+Swiftspear">Monastery Swiftspear</a>/<a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Temur+Battle+Rage" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Temur+Battle+Rage">Temur Battle Rage</a>/<a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Become+Immense" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Become+Immense">Become Immense</a>) is one of the reasons I'm less than optimistic about the future of mono-red.</p>

<p>Moving on to a less aggressive deck, let's imagine a two-color deck with relatively stringent mana requirements.</p>

<h1>Allied&mdash;White-Blue</h1>

<p>4 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Port+Town" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Port+Town">Port Town</a></p>

<p>4 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Prairie+Stream" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Prairie+Stream">Prairie Stream</a></p>

<p>4 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Evolving+Wilds" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Evolving+Wilds">Evolving Wilds</a></p>

<p>6 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Island" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Island">Island</a></p>

<p>6 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Plains" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Plains">Plains</a></p>

<p>This is the basic setup, and gives you eighteen sources of each color, with minimal ETB-tapped lands (four <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?multiverseid=405218" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;multiverseid=405218">Evolving Wilds</a> plus eight duals that may or may not enter tapped). The downside here is that you aren't getting much additional value from your mana base. More realistically, you would make room for a couple copies of <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Westvale+Abbey" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Westvale+Abbey">Westvale Abbey</a>, leading to:</p>

<p>4 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Port+Town" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Port+Town">Port Town</a></p>

<p>4 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Prairie+Stream" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Prairie+Stream">Prairie Stream</a></p>

<p>3 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Evolving+Wilds" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Evolving+Wilds">Evolving Wilds</a></p>

<p>5 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Island" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Island">Island</a></p>

<p>5 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Plains" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Plains">Plains</a></p>

<p>3 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Westvale+Abbey" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Westvale+Abbey">Westvale Abbey</a></p>

<p>This still gives you sixteen sources of each color, and even one less ETB-tapped land (though <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Prairie+Stream" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Prairie+Stream">Prairie Stream</a> is slightly more likely to enter tapped now).</p>

<p>This mana base is good, and ally color decks are happy. What about enemy colors?</p>

<h1>Enemy&mdash;Blue-Red</h1>

<p>4 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Shivan+Reef" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Shivan+Reef">Shivan Reef</a></p>

<p>4 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Wandering+Fumarole" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Wandering+Fumarole">Wandering Fumarole</a></p>

<p>4 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Highland+Lake" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Highland+Lake">Highland Lake</a></p>

<p>6 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Island" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Island">Island</a></p>

<p>6 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Mountain" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Mountain">Mountain</a></p>

<p>Here, <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Highland+Lake" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Highland+Lake">Highland Lake</a> replaces <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?multiverseid=405218" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;multiverseid=405218">Evolving Wilds</a>. Given no battle lands (like <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Prairie+Stream" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Prairie+Stream">Prairie Stream</a>), there's no pressing need to fetch out basics. That gives this deck eighteen of each source, but a way better mana base overall. This has slightly more ETB-tapped lands, since Fumarole and Lake both always enter tapped (whereas <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Port+Town" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Port+Town">Port Town</a> and <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Prairie+Stream" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Prairie+Stream">Prairie Stream</a> usually don't), but <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Wandering+Fumarole" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Wandering+Fumarole">Wandering Fumarole</a>&nbsp;being a creature land more than makes up for that. Additionally, this deck has twelve true duals instead of any <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?multiverseid=405218" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;multiverseid=405218">Evolving Wilds</a>, which forces you to pick a color and no longer adds mana of the other one.</p>

<p>Enemy colors are also very happy with their options in a two-color deck. Time to add more to the mix.</p>

<h1>Esper Control</h1>

<p></p><div class="page-width bean_block bean_block_deck_list bean--wiz-content-deck-list clearfix">

  <div class="content beanSpacing">

                                          <a name="esper_control"></a>
        <div id="esper_control" subid="57148bbd5b83c" class="deck-group">
                    <span class="deck-meta">
            <h4>Esper Control</h4>
            <h5>
                        </h5>
          </span>
                    <span class="decklist-icons">
              <form method="post" action="http://magic.wizards.com/decklist">
                 <input type="hidden" name="title" value=""><input type="hidden" name="content" value=""></form>
              <a class="download-icon" onclick="wiz_bean_content_deck_list_generate_file(this)">
                <img src="/sites/all/modules/features/wiz_bean_content_deck_list/icons/decklist_download.png"></a>
              <div class="bean_wiz_share"><div class="sharethis-wrapper"><span st_url="http://magic.wizards.com/en/articles/archive#esper_control" st_title="temp" class="st_twitter" displaytext="Tweet"></span>
<span st_url="http://magic.wizards.com/en/articles/archive#esper_control" st_title="temp" class="st_facebook" displaytext="Like"></span>
</div></div>
          </span>
                      <div class="subNav">
            <a href="#none" class="decklist">Decklist</a>
            <a href="#none" class="stats">Stats</a>
            <a href="#none" class="sample-hand">Sample Hand</a>
            <span><!--+--></span>
          </div>

                    <div class="toggle-text toggle-subnav">
                        <form>
              <div class="form-item form-type-select form-item-deck-list-sort-by">
                <label for="edit-deck-list-sort-by">Sort by:</label>
                <select class="form-select" name="deck-list-sort-by"><option selected value="overview">Overview</option><option value="color">Color</option><option value="cost">Cost</option><option value="rarity">Rarity</option></select></div>
            </form>
                                    <div class="deck-list-text">
                                            <div class="sorted-by-overview-container sortedContainer" style="">

        
      <div class="sorted-by-planeswalker clearfix element">

                                                        
        <h5>Planeswalker (1)</h5>

                                          <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSorin,%5D+%5BGrim%5D+%5BNemesis%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sorin%2C+Grim+Nemesis" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Sorin, Grim Nemesis</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-creature clearfix element">

                                                                                                                                        
        <h5>Creature (9)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BJace,%5D+%5BVryn%5D+%5BProdigy%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Jace%2C+Vryn%27s+Prodigy" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Jace, Vryn's Prodigy</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BOjutai%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord+Ojutai" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord Ojutai</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BSilumgar%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord+Silumgar" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord Silumgar</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-sorcery clearfix element">

                                                                                                
        <h5>Sorcery (6)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDeclaration%5D+%5Bin%5D+%5BStone%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Declaration+in+Stone" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Declaration in Stone</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPlanar%5D+%5BOutburst%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Planar+Outburst" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Planar Outburst</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-instant clearfix element">

                                                                                                                                                                                                                                                                
        <h5>Instant (14)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSilumgar%5D+%5BScorn%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Silumgar%27s+Scorn" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Silumgar's Scorn</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BOjutai%5D+%5BCommand%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Ojutai%27s+Command" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Ojutai's Command</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAnguished%5D+%5BUnmaking%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Anguished+Unmaking" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Anguished Unmaking</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BVoid%5D+%5BShatter%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Void+Shatter" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Void Shatter</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAnticipate%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Anticipate" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Anticipate</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BPrerogative%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord%27s+Prerogative" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord's Prerogative</a></span>
            </span>

                  
      </div>

                
      <div class="sorted-by-enchantment clearfix element">

                                                                                                
        <h5>Enchantment (4)</h5>

                                          <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BStasis%5D+%5BSnare%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Stasis+Snare" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Stasis Snare</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSilkwrap%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Silkwrap" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Silkwrap</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-land clearfix element">

                                                                                                                                                                                                                                                                                                                                                
        <h5>Land (26)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPrairie%5D+%5BStream%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Prairie+Stream" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Prairie Stream</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPort%5D+%5BTown%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Port+Town" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Port Town</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BEvolving%5D+%5BWilds%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Evolving+Wilds" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Evolving Wilds</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSunken%5D+%5BHollow%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sunken+Hollow" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Sunken Hollow</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BShambling%5D+%5BVent%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Shambling+Vent" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Shambling Vent</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">5</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BIsland%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Island" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Island</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPlains%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Plains" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Plains</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSwamp%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Swamp" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Swamp</a></span>
            </span>

                  
      </div>

              <div class="regular-card-total">60 Cards </div>
</div>

                                                          <div class="sorted-by-color-container sortedContainer" style="display:none;">

        
      <div class="sorted-by-white clearfix element">

                                                                                                                                                                                
        <h5>White (10)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDeclaration%5D+%5Bin%5D+%5BStone%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Declaration+in+Stone" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Declaration in Stone</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BStasis%5D+%5BSnare%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Stasis+Snare" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Stasis Snare</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSilkwrap%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Silkwrap" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Silkwrap</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPlanar%5D+%5BOutburst%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Planar+Outburst" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Planar Outburst</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-blue clearfix element">

                                                                                                                                                                                
        <h5>Blue (12)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSilumgar%5D+%5BScorn%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Silumgar%27s+Scorn" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Silumgar's Scorn</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BJace,%5D+%5BVryn%5D+%5BProdigy%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Jace%2C+Vryn%27s+Prodigy" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Jace, Vryn's Prodigy</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAnticipate%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Anticipate" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Anticipate</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BPrerogative%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord%27s+Prerogative" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord's Prerogative</a></span>
            </span>

                  
      </div>

                            
      <div class="sorted-by-multi colored clearfix element">

                                                                                                                                                                                                                        
        <h5>Multi colored (10)</h5>

                                          <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BOjutai%5D+%5BCommand%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Ojutai%27s+Command" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Ojutai's Command</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BOjutai%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord+Ojutai" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord Ojutai</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BSilumgar%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord+Silumgar" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord Silumgar</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAnguished%5D+%5BUnmaking%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Anguished+Unmaking" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Anguished Unmaking</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSorin,%5D+%5BGrim%5D+%5BNemesis%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sorin%2C+Grim+Nemesis" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Sorin, Grim Nemesis</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-colorless clearfix element">

                                                                                                                                                                                                                                                                                                                                                                                        
        <h5>Colorless (28)</h5>

                                          <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BVoid%5D+%5BShatter%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Void+Shatter" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Void Shatter</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPrairie%5D+%5BStream%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Prairie+Stream" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Prairie Stream</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPort%5D+%5BTown%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Port+Town" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Port Town</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BEvolving%5D+%5BWilds%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Evolving+Wilds" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Evolving Wilds</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSunken%5D+%5BHollow%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sunken+Hollow" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Sunken Hollow</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BShambling%5D+%5BVent%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Shambling+Vent" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Shambling Vent</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">5</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BIsland%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Island" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Island</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPlains%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Plains" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Plains</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSwamp%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Swamp" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Swamp</a></span>
            </span>

                  
      </div>

              <div class="regular-card-total">60 Cards </div>
</div>

              
                                            <div class="sorted-by-cost-container sortedContainer" style="display:none;">

              
      <div class="sorted-by-2 clearfix element">

                                                                                                                                                                                                                        
        <h5>2 (17)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSilumgar%5D+%5BScorn%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Silumgar%27s+Scorn" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Silumgar's Scorn</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BJace,%5D+%5BVryn%5D+%5BProdigy%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Jace%2C+Vryn%27s+Prodigy" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Jace, Vryn's Prodigy</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDeclaration%5D+%5Bin%5D+%5BStone%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Declaration+in+Stone" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Declaration in Stone</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSilkwrap%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Silkwrap" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Silkwrap</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAnticipate%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Anticipate" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Anticipate</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-3 clearfix element">

                                                                                                                                        
        <h5>3 (6)</h5>

                                          <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BStasis%5D+%5BSnare%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Stasis+Snare" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Stasis Snare</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAnguished%5D+%5BUnmaking%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Anguished+Unmaking" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Anguished Unmaking</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BVoid%5D+%5BShatter%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Void+Shatter" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Void Shatter</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-4 clearfix element">

                                                        
        <h5>4 (2)</h5>

                                          <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BOjutai%5D+%5BCommand%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Ojutai%27s+Command" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Ojutai's Command</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-5 clearfix element">

                                                                                                
        <h5>5 (6)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BOjutai%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord+Ojutai" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord Ojutai</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPlanar%5D+%5BOutburst%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Planar+Outburst" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Planar Outburst</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-6 clearfix element">

                                                                                                                                        
        <h5>6 (3)</h5>

                                          <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BSilumgar%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord+Silumgar" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord Silumgar</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BPrerogative%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord%27s+Prerogative" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord's Prerogative</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSorin,%5D+%5BGrim%5D+%5BNemesis%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sorin%2C+Grim+Nemesis" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Sorin, Grim Nemesis</a></span>
            </span>

                  
      </div>

        <div class="regular-card-total">34 Cards </div>
</div>

              
                                            <div class="sorted-by-rarity-container sortedContainer" style="display:none;">

        
      <div class="sorted-by-common clearfix element">

                                                                                                                                                                                                                        
        <h5>Common (15)</h5>

                                          <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAnticipate%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Anticipate" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Anticipate</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BEvolving%5D+%5BWilds%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Evolving+Wilds" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Evolving Wilds</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">5</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BIsland%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Island" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Island</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPlains%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Plains" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Plains</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSwamp%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Swamp" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Swamp</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-uncommon clearfix element">

                                                                                                                                                                                
        <h5>Uncommon (10)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSilumgar%5D+%5BScorn%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Silumgar%27s+Scorn" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Silumgar's Scorn</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BStasis%5D+%5BSnare%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Stasis+Snare" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Stasis Snare</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BVoid%5D+%5BShatter%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Void+Shatter" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Void Shatter</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSilkwrap%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Silkwrap" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Silkwrap</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-rare clearfix element">

                                                                                                                                                                                                                                                                                                        
        <h5>Rare (18)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDeclaration%5D+%5Bin%5D+%5BStone%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Declaration+in+Stone" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Declaration in Stone</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BOjutai%5D+%5BCommand%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Ojutai%27s+Command" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Ojutai's Command</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BAnguished%5D+%5BUnmaking%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Anguished+Unmaking" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Anguished Unmaking</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPlanar%5D+%5BOutburst%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Planar+Outburst" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Planar Outburst</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BPrerogative%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord%27s+Prerogative" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord's Prerogative</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPort%5D+%5BTown%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Port+Town" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Port Town</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BShambling%5D+%5BVent%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Shambling+Vent" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Shambling Vent</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-mythic clearfix element">

                                                                                                                                                                                                                                                                
        <h5>Mythic (17)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BJace,%5D+%5BVryn%5D+%5BProdigy%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Jace%2C+Vryn%27s+Prodigy" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Jace, Vryn's Prodigy</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BOjutai%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord+Ojutai" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord Ojutai</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BSilumgar%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord+Silumgar" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord Silumgar</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSorin,%5D+%5BGrim%5D+%5BNemesis%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sorin%2C+Grim+Nemesis" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Sorin, Grim Nemesis</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BPrairie%5D+%5BStream%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Prairie+Stream" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Prairie Stream</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSunken%5D+%5BHollow%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sunken+Hollow" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Sunken Hollow</a></span>
            </span>

                  
      </div>

        <div class="regular-card-total">60 Cards </div>
</div>

              
                                                                      
            </div>
                        <div class="deck-list-img">
	            <div class="card-image">
					<img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Silumgar%27s+Scorn" data-original="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Silumgar%27s+Scorn"></div>
            </div>

          </div>

                    <div class="toggle-graphs toggle-subnav">
            <div class="deck-list-graphs">
              <div class="chart-stats">
                <div class="chart by-manacost"></div>
                <div class="chart by-color"></div>
                <div class="chart by-type"></div>
              </div>
            </div>
          </div>

                    <div class="toggle-samplehand toggle-subnav">
            <a href="/en" class="button sample-hand-redeal" data-href="ajax/wiz-sample-hand/wiz_decklist:d7cd646c9bb5e474620884e76769555e">Deal Another Hand</a>            <div id="responsivDIV">
              <div id="wiz_windowslider">                <ul class="allinone_carousel_list"><li data-title="Anticipate">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Anticipate" border="0"></li>
                                          <li data-title="Island">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Island" border="0"></li>
                                          <li data-title="Port Town">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Port+Town" border="0"></li>
                                          <li data-title="Island">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Island" border="0"></li>
                                          <li data-title="Jace, Vryn's Prodigy">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Jace%2C+Vryn%27s+Prodigy" border="0"></li>
                                          <li data-title="Plains">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Plains" border="0"></li>
                                          <li data-title="Island">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Island" border="0"></li>
                                                      </ul></div>
            </div>
          </div>
          <!-- end Sample hand group ------------------- -->
        </div>

                
  </div>
</div>
<script type="text/javascript">
(function ($) {
  if(!Drupal.settings.wiz_bean_content_deck_list_stats) {
    Drupal.settings.wiz_bean_content_deck_list_stats = new Object();
  }
  Drupal.settings.wiz_bean_content_deck_list_stats['esper_control'] = {"manacost":{"labels":[0,2,3,4,5,6],"counts":[26,17,6,2,6,3]},"color":{"colors":["#91d4f7","#ffffda","#ffd778"],"labels":["Blue","White","Multi-Colored"],"counts":[12,10,10],"icons":["sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/blue.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/white.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/multiple.png"],"multicolors":["white","blue","black"]},"type":{"colors":["#dddddd","#777777","#666666","#cccccc","#888888","#555555"],"labels":["Instant","Creature","Sorcery","Enchantment","Planeswalker","Land"],"counts":[14,9,6,4,1,26],"icons":["sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/instant.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/creature.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/sorcery.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/enchantment.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/planes.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/land.png"]}};
})(jQuery);
</script><p>This deck has a heavy white-blue base, and touches black for <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Dragonlord+Silumgar" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord+Silumgar">Dragonlord Silumgar</a>, <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Sorin%2C+Grim+Nemesis" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sorin%2C+Grim+Nemesis">Sorin, Grim Nemesis</a>, and <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Anguished+Unmaking" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Anguished+Unmaking">Anguished Unmaking</a>. The color counts are as follows:</p>

<p>Blue: 20</p>

<p>White: 17</p>

<p>Black: 11</p>

<p>Those are some good counts, though they come at the cost of seven lands that always come in tapped and eleven more that sometimes do. Additionally, Esper has 26 land slots to play with, though that's an advantage of the archetype.</p>

<p>Things look a little different if your core is enemy color, but the overall gist is the same. Here's a mana base for green-blue splashing red:</p>

<p>4 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Evolving+Wilds" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Evolving+Wilds">Evolving Wilds</a></p>

<p>4 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Lumbering+Falls" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Lumbering+Falls">Lumbering Falls</a></p>

<p>4 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Yavimaya+Coast" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Yavimaya+Coast">Yavimaya Coast</a></p>

<p>3 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Shivan+Reef" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Shivan+Reef">Shivan Reef</a></p>

<p>2 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Cinder+Glade" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Cinder+Glade">Cinder Glade</a></p>

<p>2 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Island" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Island">Island</a></p>

<p>3 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Forest" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Forest">Forest</a></p>

<p>2 <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Mountain" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Mountain">Mountain</a></p>

<p>I'm imagining a deck that's on the aggressive side, and has 24 lands total. This list has the following counts:</p>

<p>Blue: 17</p>

<p>Green: 17</p>

<p>Red: 11</p>

<p>That's not bad for 24 lands, especially considering it gets four creature lands and has only eight ETB-tapped lands (plus <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Cinder+Glade" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Cinder+Glade">Cinder Glade</a>s).</p>

<p>Three-color decks should have a solid mana base across this format, even if it's not as easy to play heavy in all three colors. <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?multiverseid=405218" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;multiverseid=405218">Evolving Wilds</a> is about as close to an automatic four-of as it gets, given that it gets three colors and plays well with both delirium and battle lands. Past that, a mix of pain lands, creature lands, and battle and/or shadow lands is going to get you there. The above two examples show an enemy combination at 24 lands and an allied one at 26, which gives you a good base for any three-color combo.</p>

<p>Lastly, let's look at a ramp deck, courtesy of Gerry Thompson:</p>

<p></p><div class="page-width bean_block bean_block_deck_list bean--wiz-content-deck-list clearfix">

  <div class="content beanSpacing">

                                          <a name="gerry_thompsons_red-green_ramp"></a>
        <div id="gerry_thompsons_red-green_ramp" subid="57148bbd5ca71" class="deck-group">
                    <span class="deck-meta">
            <h4>Gerry Thompson's Red-Green Ramp</h4>
            <h5>
                        </h5>
          </span>
                    <span class="decklist-icons">
              <form method="post" action="http://magic.wizards.com/decklist">
                 <input type="hidden" name="title" value=""><input type="hidden" name="content" value=""></form>
              <a class="download-icon" onclick="wiz_bean_content_deck_list_generate_file(this)">
                <img src="/sites/all/modules/features/wiz_bean_content_deck_list/icons/decklist_download.png"></a>
              <div class="bean_wiz_share"><div class="sharethis-wrapper"><span st_url="http://magic.wizards.com/en/articles/archive#gerry_thompsons_red-green_ramp" st_title="temp" class="st_twitter" displaytext="Tweet"></span>
<span st_url="http://magic.wizards.com/en/articles/archive#gerry_thompsons_red-green_ramp" st_title="temp" class="st_facebook" displaytext="Like"></span>
</div></div>
          </span>
                      <div class="subNav">
            <a href="#none" class="decklist">Decklist</a>
            <a href="#none" class="stats">Stats</a>
            <a href="#none" class="sample-hand">Sample Hand</a>
            <span><!--+--></span>
          </div>

                    <div class="toggle-text toggle-subnav">
                        <form>
              <div class="form-item form-type-select form-item-deck-list-sort-by">
                <label for="edit-deck-list-sort-by">Sort by:</label>
                <select class="form-select" name="deck-list-sort-by"><option selected value="overview">Overview</option><option value="color">Color</option><option value="cost">Cost</option><option value="rarity">Rarity</option></select></div>
            </form>
                                    <div class="deck-list-text">
                                            <div class="sorted-by-overview-container sortedContainer" style="">

        
      <div class="sorted-by-planeswalker clearfix element">

                                                        
        <h5>Planeswalker (4)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BChandra,%5D+%5BFlamecaller%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Chandra%2C+Flamecaller" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Chandra, Flamecaller</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-creature clearfix element">

                                                                                                                                                                                
        <h5>Creature (11)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSylvan%5D+%5BAdvocate%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sylvan+Advocate" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Sylvan Advocate</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BUlamog,%5D+%5Bthe%5D+%5BCeaseless%5D+%5BHunger%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Ulamog%2C+the+Ceaseless+Hunger" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Ulamog, the Ceaseless Hunger</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BAtarka%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord+Atarka" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord Atarka</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BWorld%5D+%5BBreaker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=World+Breaker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">World Breaker</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-sorcery clearfix element">

                                                                                                                                                                                
        <h5>Sorcery (16)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BTraverse%5D+%5Bthe%5D+%5BUlvenwald%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Traverse+the+Ulvenwald" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Traverse the Ulvenwald</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BRuin%5D+%5Bin%5D+%5BTheir%5D+%5BWake%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Ruin+in+Their+Wake" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Ruin in Their Wake</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BNissa%5D+%5BPilgrimage%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Nissa%27s+Pilgrimage" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Nissa's Pilgrimage</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BExplosive%5D+%5BVegetation%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Explosive+Vegetation" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Explosive Vegetation</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-instant clearfix element">

                                                        
        <h5>Instant (3)</h5>

                                          <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BKozilek%5D+%5BReturn%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Kozilek%27s+Return" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Kozilek's Return</a></span>
            </span>

                  
      </div>

                
      <div class="sorted-by-enchantment clearfix element">

                                                        
        <h5>Enchantment (3)</h5>

                                          <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BOath%5D+%5Bof%5D+%5BNissa%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Oath+of+Nissa" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Oath of Nissa</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-land clearfix element">

                                                                                                                                                                                                                        
        <h5>Land (23)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BEvolving%5D+%5BWilds%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Evolving+Wilds" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Evolving Wilds</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BWastes%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Wastes" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Wastes</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSanctum%5D+%5Bof%5D+%5BUgin%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sanctum+of+Ugin" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Sanctum of Ugin</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">9</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BForest%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Forest" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Forest</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BMountain%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Mountain" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Mountain</a></span>
            </span>

                  
      </div>

              <div class="regular-card-total">60 Cards </div>
</div>

                                                          <div class="sorted-by-color-container sortedContainer" style="display:none;">

                          
      <div class="sorted-by-red clearfix element">

                                                        
        <h5>Red (4)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BChandra,%5D+%5BFlamecaller%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Chandra%2C+Flamecaller" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Chandra, Flamecaller</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-green clearfix element">

                                                                                                                                                                                                                        
        <h5>Green (19)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BTraverse%5D+%5Bthe%5D+%5BUlvenwald%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Traverse+the+Ulvenwald" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Traverse the Ulvenwald</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BOath%5D+%5Bof%5D+%5BNissa%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Oath+of+Nissa" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Oath of Nissa</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSylvan%5D+%5BAdvocate%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sylvan+Advocate" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Sylvan Advocate</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BNissa%5D+%5BPilgrimage%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Nissa%27s+Pilgrimage" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Nissa's Pilgrimage</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BExplosive%5D+%5BVegetation%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Explosive+Vegetation" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Explosive Vegetation</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-multi colored clearfix element">

                                                        
        <h5>Multi colored (2)</h5>

                                          <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BAtarka%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord+Atarka" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord Atarka</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-colorless clearfix element">

                                                                                                                                                                                                                                                                                                                                                                                        
        <h5>Colorless (35)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BRuin%5D+%5Bin%5D+%5BTheir%5D+%5BWake%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Ruin+in+Their+Wake" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Ruin in Their Wake</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BKozilek%5D+%5BReturn%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Kozilek%27s+Return" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Kozilek's Return</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BUlamog,%5D+%5Bthe%5D+%5BCeaseless%5D+%5BHunger%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Ulamog%2C+the+Ceaseless+Hunger" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Ulamog, the Ceaseless Hunger</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BWorld%5D+%5BBreaker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=World+Breaker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">World Breaker</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BEvolving%5D+%5BWilds%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Evolving+Wilds" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Evolving Wilds</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BWastes%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Wastes" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Wastes</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSanctum%5D+%5Bof%5D+%5BUgin%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sanctum+of+Ugin" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Sanctum of Ugin</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">9</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BForest%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Forest" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Forest</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BMountain%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Mountain" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Mountain</a></span>
            </span>

                  
      </div>

              <div class="regular-card-total">60 Cards </div>
</div>

              
                                            <div class="sorted-by-cost-container sortedContainer" style="display:none;">

              
      <div class="sorted-by-1 clearfix element">

                                                                                                
        <h5>1 (7)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BTraverse%5D+%5Bthe%5D+%5BUlvenwald%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Traverse+the+Ulvenwald" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Traverse the Ulvenwald</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BOath%5D+%5Bof%5D+%5BNissa%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Oath+of+Nissa" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Oath of Nissa</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-2 clearfix element">

                                                                                                
        <h5>2 (8)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSylvan%5D+%5BAdvocate%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sylvan+Advocate" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Sylvan Advocate</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BRuin%5D+%5Bin%5D+%5BTheir%5D+%5BWake%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Ruin+in+Their+Wake" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Ruin in Their Wake</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-3 clearfix element">

                                                                                                
        <h5>3 (7)</h5>

                                          <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BKozilek%5D+%5BReturn%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Kozilek%27s+Return" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Kozilek's Return</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BNissa%5D+%5BPilgrimage%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Nissa%27s+Pilgrimage" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Nissa's Pilgrimage</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-4 clearfix element">

                                                        
        <h5>4 (4)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BExplosive%5D+%5BVegetation%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Explosive+Vegetation" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Explosive Vegetation</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-6 clearfix element">

                                                        
        <h5>6 (4)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BChandra,%5D+%5BFlamecaller%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Chandra%2C+Flamecaller" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Chandra, Flamecaller</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-7 clearfix element">

                                                                                                
        <h5>7 (6)</h5>

                                          <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BAtarka%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord+Atarka" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord Atarka</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BWorld%5D+%5BBreaker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=World+Breaker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">World Breaker</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-10 clearfix element">

                                                        
        <h5>10 (1)</h5>

                                          <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BUlamog,%5D+%5Bthe%5D+%5BCeaseless%5D+%5BHunger%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Ulamog%2C+the+Ceaseless+Hunger" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Ulamog, the Ceaseless Hunger</a></span>
            </span>

                  
      </div>

        <div class="regular-card-total">37 Cards </div>
</div>

              
                                            <div class="sorted-by-rarity-container sortedContainer" style="display:none;">

        
      <div class="sorted-by-common clearfix element">

                                                                                                                                                                                                                        
        <h5>Common (24)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BNissa%5D+%5BPilgrimage%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Nissa%27s+Pilgrimage" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Nissa's Pilgrimage</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BEvolving%5D+%5BWilds%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Evolving+Wilds" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Evolving Wilds</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BWastes%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Wastes" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Wastes</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">9</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BForest%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Forest" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Forest</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BMountain%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Mountain" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Mountain</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-uncommon clearfix element">

                                                                                                
        <h5>Uncommon (8)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BRuin%5D+%5Bin%5D+%5BTheir%5D+%5BWake%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Ruin+in+Their+Wake" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Ruin in Their Wake</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BExplosive%5D+%5BVegetation%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Explosive+Vegetation" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Explosive Vegetation</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-rare clearfix element">

                                                                                                                                                                                
        <h5>Rare (14)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BTraverse%5D+%5Bthe%5D+%5BUlvenwald%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Traverse+the+Ulvenwald" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Traverse the Ulvenwald</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BOath%5D+%5Bof%5D+%5BNissa%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Oath+of+Nissa" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Oath of Nissa</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSylvan%5D+%5BAdvocate%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sylvan+Advocate" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Sylvan Advocate</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BSanctum%5D+%5Bof%5D+%5BUgin%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sanctum+of+Ugin" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Sanctum of Ugin</a></span>
            </span>

                  
      </div>

          
      <div class="sorted-by-mythic clearfix element">

                                                                                                                                                                                                                        
        <h5>Mythic (14)</h5>

                                          <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BChandra,%5D+%5BFlamecaller%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Chandra%2C+Flamecaller" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Chandra, Flamecaller</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">3</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BKozilek%5D+%5BReturn%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Kozilek%27s+Return" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Kozilek's Return</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">1</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BUlamog,%5D+%5Bthe%5D+%5BCeaseless%5D+%5BHunger%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Ulamog%2C+the+Ceaseless+Hunger" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Ulamog, the Ceaseless Hunger</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">2</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BDragonlord%5D+%5BAtarka%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord+Atarka" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">Dragonlord Atarka</a></span>
            </span>

                                                    <span class="row">
              <span class="card-count">4</span>
              <span class="card-name"><a href="http://gatherer.wizards.com/Pages/Search/Default.aspx?name=+%5BWorld%5D+%5BBreaker%5D" data-src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=World+Breaker" data-mp4="http://magic.wizards.com/" data-webm="http://magic.wizards.com/" data-gif="http://magic.wizards.com/" class="deck-list-link">World Breaker</a></span>
            </span>

                  
      </div>

        <div class="regular-card-total">60 Cards </div>
</div>

              
                                                                      
            </div>
                        <div class="deck-list-img">
	            <div class="card-image">
					<img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Traverse+the+Ulvenwald" data-original="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Traverse+the+Ulvenwald"></div>
            </div>

          </div>

                    <div class="toggle-graphs toggle-subnav">
            <div class="deck-list-graphs">
              <div class="chart-stats">
                <div class="chart by-manacost"></div>
                <div class="chart by-color"></div>
                <div class="chart by-type"></div>
              </div>
            </div>
          </div>

                    <div class="toggle-samplehand toggle-subnav">
            <a href="/en" class="button sample-hand-redeal" data-href="ajax/wiz-sample-hand/wiz_decklist:ddcc5977cbe786485a58401fa7369688">Deal Another Hand</a>            <div id="responsivDIV">
              <div id="wiz_windowslider">                <ul class="allinone_carousel_list"><li data-title="Chandra, Flamecaller">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Chandra%2C+Flamecaller" border="0"></li>
                                          <li data-title="Sylvan Advocate">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Sylvan+Advocate" border="0"></li>
                                          <li data-title="Dragonlord Atarka">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Dragonlord+Atarka" border="0"></li>
                                          <li data-title="Explosive Vegetation">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Explosive+Vegetation" border="0"></li>
                                          <li data-title="World Breaker">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=World+Breaker" border="0"></li>
                                          <li data-title="Evolving Wilds">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Evolving+Wilds" border="0"></li>
                                          <li data-title="Wastes">
                        <img src="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Wastes" border="0"></li>
                                                      </ul></div>
            </div>
          </div>
          <!-- end Sample hand group ------------------- -->
        </div>

                
  </div>
</div>
<script type="text/javascript">
(function ($) {
  if(!Drupal.settings.wiz_bean_content_deck_list_stats) {
    Drupal.settings.wiz_bean_content_deck_list_stats = new Object();
  }
  Drupal.settings.wiz_bean_content_deck_list_stats['gerry_thompsons_red-green_ramp'] = {"manacost":{"labels":[0,1,2,3,4,6,7,10],"counts":[23,7,8,7,4,4,6,1]},"color":{"colors":["#7dcd98","#f28f78","#ffd778"],"labels":["Green","Red","Multi-Colored"],"counts":[19,4,2],"icons":["sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/green.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/red.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/multiple.png"],"multicolors":["red","green"]},"type":{"colors":["#666666","#cccccc","#777777","#888888","#dddddd","#555555"],"labels":["Sorcery","Enchantment","Creature","Planeswalker","Instant","Land"],"counts":[16,3,11,4,3,23],"icons":["sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/sorcery.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/enchantment.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/creature.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/planes.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/instant.png","sites\/all\/modules\/features\/wiz_bean_content_deck_list\/icons\/land.png"]}};
})(jQuery);
</script><p>This mana base has a few interesting things going on. One is the inclusion of <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Wastes" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Wastes">Wastes</a>, which is to enable Ruin in their Wake. Ruin is one of the most powerful ramp spells available, and thanks to <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Traverse+the+Ulvenwald" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Traverse+the+Ulvenwald">Traverse the Ulvenwald</a> and <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?multiverseid=405218" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;multiverseid=405218">Evolving Wilds</a>, it's not that hard to pull off.</p>

<p>Here are the color counts for this deck:</p>

<p>Green: 13</p>

<p>Red: 7</p>

<p><a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Wastes" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Wastes">Wastes</a>: 8 (<a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?multiverseid=405218" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;multiverseid=405218">Evolving Wilds</a> counts)</p>

<p>That seems low, but that's because the lands don't tell the full story. Four copies of Traverse and three copies of <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Oath+of+Nissa" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Oath+of+Nissa">Oath of Nissa</a> essentially increase the red/<a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Wastes" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Wastes">Wastes</a> count by four, as Traverse gets them and Oath gives you more shots at them. Note also that <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Oath+of+Nissa" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Oath+of+Nissa">Oath of Nissa</a> helps cast the only RR spell in the deck, <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Chandra%2C+Flamecaller" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Chandra%2C+Flamecaller">Chandra, Flamecaller</a>.</p>

<p><a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Nissa%27s+Pilgrimage" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Nissa%27s+Pilgrimage">Nissa's Pilgrimage</a> and <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Explosive+Vegetation" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Explosive+Vegetation">Explosive Vegetation</a> also add to the mix, and overall this deck just needs one Forest and it's off to the races. I'd still look at playing a tenth Forest over the third Mountain, but this mana base is pretty solid.</p>

<p>We've taken quite the landscape tour today, and hopefully these examples give you both practical bases to start with and the logic needed to diverge when necessary. It's tough balancing the numbers of lands that come in tapped, total sources needed, and how cards like <a href="http://gatherer.wizards.com/Pages/Card/Details.aspx?name=Traverse+the+Ulvenwald" class="autocard-link" data-image-url="http://gatherer.wizards.com/Handlers/Image.ashx?type=card&amp;name=Traverse+the+Ulvenwald">Traverse the Ulvenwald</a> count. Luckily, there are plenty of mana options available, and there's a range of mana bases that work for every given deck. We may not get to play four colors for free anymore, but two- and three-color decks are quite viable, especially if they aren't trying to play a bunch of one-drops.</p>

<p>LSV</p></body></html>
      </div>

      <!-- BEGIN :: Article footer -->
      <div class="article-footer">
        <p class="posted-in">
          Posted in          <strong class="breadcrumb-no-link">Top Decks</strong>
          on April 15, 2016        </p>
        <div class="sharing">
          <div class="share-article">Share Article</div>
          <div class="social-share">
            <a class="facebook" href="#" data-share-url="http://magic.wizards.com/articles/archive/top-decks/evolving-mana-bases-2016-04-15"><span class="share-count"></span><span>&nbsp;Shares</span></a>
            <a class="twitter" href="#" data-share-url="http://magic.wizards.com/articles/archive/top-decks/evolving-mana-bases-2016-04-15"><span class="share-count"></span><span>&nbsp;Tweets</span></a>
            <a class="google" href="#" data-share-url="http://magic.wizards.com/articles/archive/top-decks/evolving-mana-bases-2016-04-15"><span class="share-count"></span><span>&nbsp;+</span></a>
          </div>
        </div>
      </div>
      <!-- END :: Article footer -->

    </article>
  </div>

  <!-- BEGIN :: ASIDE -->
        <aside>
      <div class="aside-wrapper">
        

            <h2><span>FEATURED ARTICLE</span></h2>
      <div class="articles-bloc">
            <div class="article">
  <div class="wrap">
    <div class="visual" style="background-image: url(http://magic.wizards.com/sites/mtg/files/images/hero/uvddkUU1DO_dmu_icon.jpg)"></div>
    <div class="details">
      <a href="/en/articles/archive/daily-magic-update/update-2016-04-15" class="cat">DAILY MAGIC UPDATE</a>
      <p class="date">April 15, 2016</p>
      <a href="/en/articles/archive/daily-magic-update/update-2016-04-15" class="title">The April 15, 2016 Update</a>
              <a href="/en/articles/archive/daily-magic-update/update-2016-04-15" class="auth">Blake Rasmussen</a>
      
      <div class="infos">
                  <p>The Daily Magic Update is a roundup of everything you should know for today from throughout the Magic community.
</p>
                <p><a href="/en/articles/archive/daily-magic-update/update-2016-04-15" class="learn-more">Learn More</a></p>
      </div>
    </div>
  </div>
</div><div class="article">
  <div class="wrap">
    <div class="visual" style="background-image: url(http://magic.wizards.com/sites/mtg/files/images/hero/WtP20160414_icon_0.jpg)"></div>
    <div class="details">
      <a href="/en/articles/archive/ways-play/friday-night-magic-shadows-over-innistrad-week-one-2016-04-14" class="cat">WAYS TO PLAY</a>
      <p class="date">April 14, 2016</p>
      <a href="/en/articles/archive/ways-play/friday-night-magic-shadows-over-innistrad-week-one-2016-04-14" class="title">Friday Night Magic with Shadows over Innistrad—Week One</a>
              <a href="/en/articles/archive/ways-play/friday-night-magic-shadows-over-innistrad-week-one-2016-04-14" class="auth">Maria Bartholdi</a>
      
      <div class="infos">
                  <p>Maria takes a look at a few of her favorite Shadows over Innistrad cards, combos, and strategies as she eagerly awaits the next FNM.
</p>
                <p><a href="/en/articles/archive/ways-play/friday-night-magic-shadows-over-innistrad-week-one-2016-04-14" class="learn-more">Learn More</a></p>
      </div>
    </div>
  </div>
</div><div class="article">
  <div class="wrap">
    <div class="visual" style="background-image: url(http://magic.wizards.com/sites/mtg/files/images/hero/OP20160414_icon.jpg)"></div>
    <div class="details">
      <a href="/en/articles/archive/organized-play/live-coverage-turns-spotlight-shadows-over-innistrad-2016-04-14" class="cat">ORGANIZED PLAY</a>
      <p class="date">April 14, 2016</p>
      <a href="/en/articles/archive/organized-play/live-coverage-turns-spotlight-shadows-over-innistrad-2016-04-14" class="title">Live Coverage Turns Spotlight on Shadows over Innistrad</a>
              <a href="/en/articles/archive/organized-play/live-coverage-turns-spotlight-shadows-over-innistrad-2016-04-14" class="auth">Greg Collins</a>
      
      <div class="infos">
                  <p>Get all the information on the upcoming Pro Tour and Grand Prix, along with the star-studded rosters of the Pro Tour teams.
</p>
                <p><a href="/en/articles/archive/organized-play/live-coverage-turns-spotlight-shadows-over-innistrad-2016-04-14" class="learn-more">Learn More</a></p>
      </div>
    </div>
  </div>
</div>          </div>
            
      <h2><span>EVENTS</span></h2>
      <div class="articles-bloc">
    <div class="article static pub-event "
         style="background-image: url(http://magic.wizards.com/sites/mtg/files/AD_Blighted-Fen_FNM.jpg)">
      <div class="wrap details">
                  <img src="http://magic.wizards.com/sites/mtg/files/Ad_Logo_FNM.png" />
                <p class="date"></p>
                  <p class="description">Battle against your friends and you could earn a Promo Blighted Fen!
</p>
                          <p>
            <a class="learn-more " href="http://magic.wizards.com/en/events/event-types/friday-night-magic" data-video-url="">
              Friday Night Magic            </a>
          </p>
              </div>
    </div>
  </div>
      
      <div class="articles-bloc">
    <div class="article static pub-event "
         style="background-image: url(http://magic.wizards.com/sites/mtg/files/AD_Gitrog-Monster.jpg)">
      <div class="wrap details">
                  <img src="http://magic.wizards.com/sites/mtg/files/AD_Logo_GP-Alb.png" />
                <p class="date"></p>
                  <p class="description">Grand Prix Albuquerque offers our first look at high-level Shadows over Innistrad limited!
</p>
                          <p>
            <a class="learn-more " href="http://magic.wizards.com/en/events/premierplay/grandprix/fact-sheet-gpabq16" data-video-url="">
              More Info            </a>
          </p>
              </div>
    </div>
  </div>
      
      <div class="articles-bloc">
    <div class="article static pub-event "
         style="background-image: url(http://magic.wizards.com/sites/mtg/files/AD_Arcangel-Avacyn.jpg)">
      <div class="wrap details">
                  <img src="http://magic.wizards.com/sites/mtg/files/AD_Logo_PT-SOI.png" />
                <p class="date"></p>
                  <p class="description">The best in the world gather in Madrid, Spain, to compete at Pro Tour Shadows over Innistrad, complete with live video coverage.
</p>
                          <p>
            <a class="learn-more " href="http://magic.wizards.com/en/events/premierplay/protour/ptsoi" data-video-url="">
              More Info            </a>
          </p>
              </div>
    </div>
  </div>
                  
      <h2><span>PRODUCTS</span></h2>
      <div class="articles-bloc">
    <div class="article static pub-event "
         style="background-image: url(http://magic.wizards.com/sites/mtg/files/AD_Persistent-Nightmare.jpg)">
      <div class="wrap details">
                  <img src="http://magic.wizards.com/sites/mtg/files/Ad_Logo_SOI_0.png" />
                <p class="date"></p>
                  <p class="description">Something has happened to Innistrad. Can you solve the riddle?
</p>
                          <p>
            <a class="learn-more " href="http://magic.wizards.com/en/content/shadows-over-innistrad" data-video-url="">
              Shadows over Innistrad            </a>
          </p>
              </div>
    </div>
  </div>
                </div>
    </aside>
    <!-- END :: ASIDE -->

  
  <h2><span>Latest Top Decks Articles</span></h2>
  <div class="articles-bloc releated">

              <div class="article">
          <div class="wrap">
                          <div class="visual" style="background-image: url(http://magic.wizards.com/sites/mtg/files/images/hero/TD20160408_icon.jpg);"></div>
                        <div class="details">
                              <a href="#" class="cat">TOP DECKS</a>
                            <p class="date">April 8, 2016</p>
              <a href="#" class="title">How to Solve New Standard Formats</a>
                              <a href="#" class="auth">by, Melissa DeTora</a>
                            <div class="infos">
                                  <p>Happy Shadows over Innistrad Release Week! By the time this article goes live, Shadows over Innistrad will be on the shelves and we'll be in a brand-new Standard rotation. Unlike previous...</p>
                                <p><a href="/en/articles/archive/top-decks/how-solve-new-standard-formats-2016-04-08" class="learn-more">Learn More</a></p>
              </div>
            </div>
          </div>
        </div>
              <div class="article">
          <div class="wrap">
                          <div class="visual" style="background-image: url(http://magic.wizards.com/sites/mtg/files/images/hero/TD20160401_icon.jpg);"></div>
                        <div class="details">
                              <a href="#" class="cat">Top Decks</a>
                            <p class="date">April 1, 2016</p>
              <a href="#" class="title">The Top Shadows Cards for Standard</a>
                              <a href="#" class="auth">by, Luis Scott-Vargas </a>
                            <div class="infos">
                                  <p>The shadows have lifted, and we can finally shine a light on the full set list for Shadows over Innistrad! It's time to investigate the set for Constructed standouts, and I'm sure we will...</p>
                                <p><a href="/en/articles/archive/top-decks/top-shadows-cards-standard-2016-04-01" class="learn-more">Learn More</a></p>
              </div>
            </div>
          </div>
        </div>
            <div class="article static">
        <div class="wrap">
          <div class="visual" style="background-image: url(http://magic.wizards.com/sites/all/themes/wiz_mtg/images/global/reconstructedArchive.jpg);"></div>
          <div class="details">
            <p class="title"><span>Articles</span></p>
            <div class="details">
              <p class="title"><span>Articles</span></p>
              <p class="sub-title">Top Decks Archive</p>
              <div class="infos">
                <p>Consult the archives for more articles!</p>
                <p><a href="/en/articles/archive" class="learn-more">See All</a></p>
              </div>
            </div>
          </div>
        </div>
      </div>
  </div>

</div>    </div>

  </div>
</div> <!-- /block-inner /block -->  </div>
  </div>

  <!-- Footer -->
    <footer>
    <div id="back-to-top">
      <a href="#viewport">Back to top</a>
    </div>
    <div id="where-to-buy">
      <div class="content page-width">
        <form action="/en/articles/archive/top-decks/evolving-mana-bases-2016-04-15" method="post" id="wiz-store-and-event-locator-search-form--2" accept-charset="UTF-8"><div><div class="intro"><div class="wrap"><h5>Where to Play and Buy</h5><p>Find a location to buy or play<br />Magic: The Gathering near you.</p></div></div><div class="form"><div class="wrap"><span class="column zip-code"><div class="form-item form-type-textfield form-item-search-string">
 <input placeholder="Enter your city or postal code" type="text" id="edit-search-string--4" name="search-string" value="" size="25" maxlength="128" class="form-text" />
</div>
</span><span class="column actions"><button class="action-button" type="submit">Find Now !</button></span></div></div><input class="hide form-submit" type="submit" id="edit-search-button--4" name="op" value="Find Now" /><input type="hidden" name="form_build_id" value="form-KTd0GUbkYgKgoIWNwYTfrjnOaxvKFfinIsRgbPbgu18" />
<input type="hidden" name="form_id" value="wiz_store_and_event_locator_search_form" />
</div></form>      </div>
    </div>

    <div class="main-footer">
      <div class="content page-width">
        <div class="text">
                      <div id="locale-select">
              <label for="locale-select-ddl">Select your language:</label>

              <div class="select-wrapper">
                <select id="locale-select-ddl">
                  <option value="/zh-hans" >简体中文</option><option value="/zh-hant" >繁體中文</option><option value="/fr" >Français</option><option value="/de" >Deutsch</option><option value="/it" >Italiano</option><option value="/ja" >日本語</option><option value="/ko" >한국어</option><option value="/pt-br" >Português (Brasil)</option><option value="/ru" >Русский</option><option value="/es" >Español</option><option value="/en" selected>English</option>                </select>
              </div>
            </div>
          
          

      <p class="brand-family-title">Wizards Brand Family</p>
    <p class="brand-family-menu"><a href="http://magic.wizards.com" target="_blank">magic</a> <em>|</em> <a href="http://dnd.wizards.com" target="_blank">d&amp;d</a> <em>|</em> <a href="http://wpn.wizards.com" target="_blank">wpn</a> <em>|</em> <a href="http://dm.takaratomy.co.jp" target="_blank">duel masters</a> <em>|</em> <a href="http://avalonhill.wizards.com" target="_blank">avalon hill</a></p>
  <p><a href="http://company.wizards.com/tou" target="_blank">Terms of Use</a> <em>|</em> <a href="http://company.wizards.com/conduct" target="_blank">Code of Conduct</a> <em>|</em> <a href="http://company.wizards.com/privacy " target="_blank">Privacy Policy</a> <em>|</em> <a href="http://company.wizards.com/contactus" target="_blank">Customer Service</a> <em>|</em> <a href="/en/articles/archive/our-cookie-policy-2013-10-28">Cookies</a></p>
  <p class="copyright">© 1995-2016 Wizards of the Coast LLC, a subsidiary of Hasbro, Inc. All Rights Reserved.</p>

        </div>
        

      <p class="logo wizard">
      <a href="http://company.wizards.com"
         target="_blank"
         title="Wizards of the Coast"
        ><img src="/sites/all/themes/wiz_mtg/img/interface/wizard-of-the-coast-logo.png" alt="Wizards of the Coast" /></a>
    </p>
  
      <p class="logo hasbro">
      <a href="http://www.hasbro.com"
         target="_blank"
         title="Hasbro"
	    ><img src="/sites/all/themes/wiz_mtg/img/interface/hasbro-logo.svg" alt="Hasbro" /></a>
    </p>
  
      <p class="logo privacy">
      <a href="http://www.esrb.org/confirm/wizards-confirmation.aspx"
         target="_blank"
         title="ESRB Privacy Certified"
	    ><img src="/sites/all/themes/wiz_mtg/img/interface/esrb-badge.png" alt="ESRB Privacy Certified" /></a>
    </p>
  
      </div>
    </div>
  </footer>
  </div>

<div id="cookies-warning">
	<div class="wrap page-width">
		<div class="text">
			<p>
        We use cookies on this site to enhance your user experience. By clicking any link on this page or by clicking <strong>Yes</strong>, you are giving your consent for us to set cookies.        <a href="http://company.wizards.com/policies/web/cookie" target="_blank"> (Learn more about cookies)</a>
      </p>
		</div>
		<p class="actions">
			<button type="button" class="button agree">Yes, I agree</button>
			<a href="http://company.wizards.com/policies/web/cookie" target="_blank" class="button disagree">No, I want to find out more</a>
		</p>
	</div>
</div>
      <div class="region region-page-bottom">
    <script type="text/javascript">
  var _sf_async_config=Drupal.settings.chartbeat;
  (function(){
    function loadChartbeat() {
      window._sf_endpt=(new Date()).getTime();
      var e = document.createElement('script');
      e.setAttribute('language', 'javascript');
      e.setAttribute('type', 'text/javascript');
      e.setAttribute('src',
         (("https:" == document.location.protocol) ? "https://s3.amazonaws.com/" : "http://") +
         "static.chartbeat.com/js/chartbeat.js");
      document.body.appendChild(e);
    }
    var oldonload = window.onload;
    window.onload = (typeof window.onload != 'function') ?
       loadChartbeat : function() { oldonload(); loadChartbeat(); };
  })();
</script>  </div>
<script type="text/javascript" src="http://magic.wizards.com/sites/mtg/files/js/js_01xQRQjlQ2YaM7EvzEYCUTSV69KIWcV-jG_7I7e3jYc.js"></script>
  </div>

	<!-- Crazy Egg -->
	<script type="text/javascript">
		setTimeout(function(){var a=document.createElement("script");
		var b=document.getElementsByTagName("script")[0];
		a.src=document.location.protocol+"//dnn506yrbagrg.cloudfront.net/pages/scripts/0009/9185.js?"+Math.floor(new Date().getTime()/3600000);
		a.async=true;a.type="text/javascript";b.parentNode.insertBefore(a,b)}, 1);
	</script>
<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"e1ac2d6ef0","applicationID":"5162617","transactionName":"YFxQbRBXXUQAWxJYV1kWc1oWX1xZTkgHVl1oVFNXA1FWRT5WCVVdaE9bXBVpQ1YGXQ==","queueTime":0,"applicationTime":678,"atts":"TBtTG1hNTko=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>

    http_version: 
  recorded_at: Mon, 18 Apr 2016 10:43:22 GMT
- request:
    method: get
    uri: http://sales.starcitygames.com/deckdatabase/displaydeck.php?DeckID=101059
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 18 Apr 2016 10:54:43 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - PHPSESSID=65kheme8ktui51kgd9v4gb79b6; path=/
      - __cfduid=d3ad18ea2345624ccb9f80495efb68fde1460976883; expires=Tue, 18-Apr-17
        10:54:43 GMT; path=/; domain=.starcitygames.com; HttpOnly
      - session_track=65kheme8ktui51kgd9v4gb79b6; expires=Mon, 25-Apr-2016 10:54:43
        GMT; path=/; domain=.starcitygames.com
      X-Frame-Options:
      - SAMEORIGIN
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      Server:
      - cloudflare-nginx
      Cf-Ray:
      - 2957949316f93536-LHR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!doctype html>
<html xmlns:fb="http://ogp.me/ns/fb#">
<head>
<title>Mono-White Humans, by Max McVety - A Magic: the Gathering Deck</title>
<meta name="robots" content="index, follow">
<!--[if lt IE 9]>
<script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
<![endif]-->
<!--[if lt IE 8]>
<script src="//ie7-js.googlecode.com/svn/version/2.1(beta4)/IE8.js"></script>
<![endif]-->
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="description" content="Mono-White Humans, as played by Max McVety">
<meta name="keywords" content="Magic the gathering, Magic singles, Magic boxes, Magic decks, Magic cards, Magic strategy, mtg, magic the gathering deck, mtg decks, mtg deck">
<meta name="verify-v1" content="YK4pepakFtM+pkoCT9CqjcIiYrueJ0upTrFc6d9I03w="/>
<meta name="y_key" content="095558bcde3b1768">
<meta property="og:url" content="http://sales.starcitygames.com/deckdatabase/displaydeck.php?DeckID=101059"/>
<meta property="og:title" content="Mono-White Humans, by Max McVety - A Magic: the Gathering Deck"/>
<meta property="og:description" content="Mono-White Humans, as played by Max McVety"/>
<meta property="og:type" content="website"/>
<meta property="og:site_name" content="StarCityGames.com"/>
<meta property="og:image" content="http://static.starcitygames.com/www/images/articles/likeImage2.jpg"/>
<meta property="fb:admins" content="1662043555"/>
<meta property="fb:app_id" content="166463640084673"/>
<link href='//fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,700,700italic' rel='stylesheet' type='text/css'>
<link rel="stylesheet" href="//www.starcitygames.com/assets/reset.css">
<link rel="apple-touch-icon" href="//static.starcitygames.com/www/images/banners/media/scgmobile/ipad_feed.png">
<link rel="alternate" type="application/rss+xml" title="StarCityGames RSS" href="http://www.starcitygames.com/rss/rssfeed.xml">
<link rel="search" href="http://www.starcitygames.com/opensearch.xml" type="application/opensearchdescription+xml" title="Magic Card Search"/>
<link rel="stylesheet" type="text/css" href="//sales.starcitygames.com/javascript/jquery.add_to_cart.css">
<link rel="stylesheet" type="text/css" href="//sales.starcitygames.com/library/scripts/fancybox/jquery.fancybox.css?v=2.1.2" media="screen"/>
<link rel="stylesheet" href="//sales.starcitygames.com/library/scripts/jquery-ui-1.8.4/themes/base/jquery.ui.theme.css">
<link rel="stylesheet" href="//sales.starcitygames.com/library/scripts/jquery-ui-1.8.4/themes/base/jquery.ui.core.css">
<link rel="stylesheet" href="//sales.starcitygames.com/library/scripts/jquery-ui-1.8.4/themes/base/jquery.ui.button.css">
<link rel="stylesheet" href="//sales.starcitygames.com/library/scripts/jquery-ui-1.8.4/themes/base/jquery.ui.dialog.css">
<link rel="stylesheet" href="//sales.starcitygames.com/library/scripts/jquery-ui-1.8.4/themes/base/jquery.ui.autocomplete.css">
<link rel="stylesheet" href="//sales.starcitygames.com/library/scripts/jquery-ui-1.8.4/themes/base/jquery.ui.datepicker.css">
<link rel="stylesheet" href="//www.starcitygames.com/assets/style_css.php?date=2016_04_07&ir=http://static.starcitygames.com/www//images">
<link rel="stylesheet" href="//www.starcitygames.com/assets/jquery.jscrollpane.css">
<link rel="stylesheet" href="//www.starcitygames.com/assets/skin.css">
<link rel="stylesheet" href="//www.starcitygames.com/assets/selectboxes.css">
<link rel="stylesheet" type="text/css" href="//www.starcitygames.com/js/jquery.qtip-2.2.1.min.css"/>
<link rel="stylesheet" type="text/css" href="//www.starcitygames.com/js/google_translate.css"/>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.8.4/jquery-ui.min.js"></script>
<script src="//www.starcitygames.com/js/jquery.tabify.js"></script>
<script src="//www.starcitygames.com/js/jquery.marquee.js"></script>
<script src="//www.starcitygames.com/js/jquery.tools.min.js"></script>
<script src="//www.starcitygames.com/js/jquery.autocomplete_all_products.js"></script>
<script src="//www.starcitygames.com/js/jquery.mousewheel.js"></script>
<script src="//www.starcitygames.com/js/jquery.jscrollpane.min.js"></script>
<script src="//www.starcitygames.com/js/jquery.jcarousel.min.js"></script>
<script src="//www.starcitygames.com/js/jquery.chosen.js"></script>
<script src="//www.starcitygames.com/js/jquery.validate.js"></script>
<script src="//www.starcitygames.com/js/jquery.qtip-2.2.1.min.js"></script>
<script src="//www.starcitygames.com/js/jquery.easing.js"></script>
<script src="//www.starcitygames.com/js/jquery.flexslider-min.js"></script>
<script src="//sales.starcitygames.com/javascript/site_definitions.php"></script>
<script src="//sales.starcitygames.com/javascript/jquery.add_to_cart.js"></script>
<script src="//sales.starcitygames.com/javascript/jquery.wishlist.js"></script>
<script src="//sales.starcitygames.com/library/scripts/jquery.cycle.all.js"></script>
<script type='text/javascript' src='//sales.starcitygames.com/library/scripts/custom.js'></script>
<script type="text/javascript" src="//www.starcitygames.com/javascript/jquery.smoothDivScroll-1.1-min.js"></script>
<script type="text/javascript" src="//sales.starcitygames.com/library/scripts/fancybox/jquery.fancybox.js?v=2.1.3"></script>
<script type="text/javascript" src="//www.starcitygames.com/js/google_analytics.js"></script>
<script type="text/javascript" src="//www.starcitygames.com/js/google_tags.js"></script>
<script type="text/javascript" src="//www.starcitygames.com/js/google_translate.js"></script>
<script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
<script src="//www.starcitygames.com/js/site.js?ver=2015.07.27"></script>
 
<script src="http://www.starcitygames.com/javascript/jquery.hoverIntent.minified.js" type="text/javascript" charset="utf-8"></script>
<script src="http://sales.starcitygames.com//javascript/jquery.cardpopup_qtip.js" type="text/javascript" charset="utf-8"></script>
<link rel="stylesheet" type="text/css" href="http://sales.starcitygames.com//library/scripts/jquery-ui-1.8.4/themes/ui-lightness/jquery-ui-1.8.4.custom.css">
<script language="JavaScript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.14/jquery-ui.min.js"></script>
<script type="text/javascript" src="http://sales.starcitygames.com//library/clipboard_swf/ZeroClipboard.js"></script>
<script type="text/javascript">
$(function(){
	$("#copy_URL").button();

	ZeroClipboard.setMoviePath( "http://sales.starcitygames.com//library/clipboard_swf/ZeroClipboard10.swf" ); 

	//The JavaScript that allows for one-click copying of the URL
	var clip = new ZeroClipboard.Client();		
	
	//Glue it to the elements
	clip.glue( "copy_URL" );
	
	clip.setText("http://scg.im/d" + 101059);
	
	//Add a complete event to let the user know the text was copied
	clip.addEventListener("complete", function(client, text) {
		$("#copy_URL").val("Copied!"); 
		
		//And change it after a second
		setTimeout( function(){
			$("#copy_URL").val("Copy This URL!");
		}, 1500);
	});
});	
</script>
</HEAD>
<BODY><script type="text/javascript">
//<![CDATA[
try{(function(a){var b="http://",c="sales.starcitygames.com",d="/cdn-cgi/cl/",e="img.gif",f=new a;f.src=[b,c,d,e].join("")})(Image)}catch(e){}
//]]>
</script>
 
<div id="fb-root"></div>
<script>
      window.fbAsyncInit = function() {
        FB.init({
          appId      : "166463640084673", // App ID
          channelUrl : "http://www.starcitygames.com/channel.php", // Channel File
          status     : true, // check login status
          cookie     : true, // enable cookies to allow the server to access the session
          xfbml      : true  // parse XFBML
        });
      };

      (function(d, s, id){
         var js, fjs = d.getElementsByTagName(s)[0];
         if (d.getElementById(id)) {return;}
         js = d.createElement(s); js.id = id;
         js.src = "//connect.facebook.net/en_US/all.js";
         fjs.parentNode.insertBefore(js, fjs);
       }(document, 'script', 'facebook-jssdk'));
    </script>
<div class="fixedtop_holder"></div>
<header id="header">
 
<div id='div-gpt-ad-1368036768350-0' style='width:728px; height:90px; margin-left:auto; margin-right:auto;'>
<script type='text/javascript'>
            googletag.cmd.push(function() { googletag.display('div-gpt-ad-1368036768350-0'); });
            </script>
</div>
<div style="clear:both;"></div>
<div id="inner_wrapper">
<div class="header_wrapper">
<div id="logo" class="left"><a href="http://www.starcitygames.com/index.php"><img src="http://static.starcitygames.com/www//images/header/headerlogo.png" data-hover="http://static.starcitygames.com/www//images/header/headerlogo-over.png"></a></div>
<div id="main_nav" class="left">
<nav>
<ul>
<li class="spacer"><a href="http://www.starcitygames.com/cardsets/">STORE</a></li>
<li class="spacer"><a href="http://www.starcitygames.com/content/schedule">EVENTS</a></li>
<li class="spacer"><a href="http://www.starcitygames.com/tags/Premium~Select/">ARTICLES</a></li>
<li class="spacer"><a href="http://www.starcitygames.com/content/decklists/">DECKS</a></li>
<li class="spacer"><a href="http://www.starcitygames.com/buylist/">BUYLIST</a></li>
<li class="spacer"><a href="https://sales.starcitygames.com/contactus/">HELP</a></li>
<li class="spacer"><a href="http://www.starcitygames.com/content/gamecenter/">GAME CENTER</a></li>
<li class="spacer"><a href="http://www.starcitygames.com/content/newslettersignup/">NEWSLETTER</a></li>
</ul>
</nav>
</div>
<div id="main_menu_search" class="left">
<div id="main_search">
<form action="//sales.starcitygames.com/search.php" method="get" name="search_form">
<input name="substring" type="text" placeholder="SEARCH THE WORLD'S LARGEST MAGIC:THE GATHERING STORE!" id="product_searchbox">
<input id="go" name="go" type="image" value="GO" src="//www.starcitygames.com/images/go.jpg">
<input name="t_all" type="hidden" value="All">
<input name="start_date" type="hidden" value="2010-01-29">
<input name="end_date" type="hidden" value="2012-04-22">
<input name="order_1" type="hidden" value="finish">
<input name="limit" type="hidden" value="25">
<input name="action" type="hidden" value="Show+Decks">
<input name="card_qty[1]" type="hidden" value="1">
<div id="advsearch" class="right">
<a href="http://sales.starcitygames.com/spoiler/spoiler.php">Advanced Search</a><br>
<a href="http://sales.starcitygames.com/addadeckform.php" class="normal">Deck Builder</a>
</div>
</form>
</div>
</div>
<div id="login" class="left">
<ul>
<li class="account1 account_function">Hello. Sign In.<br>
<span class="bold">YOUR ACCOUNT <img src="//www.starcitygames.com/images/arrow_account.png" width="9" height="6"></span>
<div class="account_function_page">
<div id="login_form">
<form action="https://sales.starcitygames.com/login.php" method="post" name="authentication_form">
<label for="log0n">Email Address:</label><input name="log0n" id="log0n" type="text" class="text">
<label for="password">Password:</label><input name="password" id="password" type="password" class="text">
<p class="small_text"><a href="https://sales.starcitygames.com/password_reset.php">forgot your password?</a></p>
<input name="submit" type="submit" value="Sign in" class="button">
<input id="mode" class=" webdeveloper-unhidden" type="hidden" value="login" name="mode">
</form>
New customer? <a href="http://sales.starcitygames.com/myaccount/signup">Start here!</a>
</div>
</div>
</li>
<li class="account2 account_function">
<span id='cart_count'></span><br>
<span class="bold">CART <img src="//www.starcitygames.com/images/arrow_account.png" width="9" height="6"></span>
<div class="account_function_page">
<form id="do_checkout" name="do_checkout" method="post" action="https://sales.starcitygames.com/checkout/shipping.php">
<input type="hidden" name="co" value="all">
</form>
<p class="view_cart"><a href="http://sales.starcitygames.com/checkout/cart.php">View Cart (<span id='cart_count2'></span> items)</a></p>
<p class="checkout_cart"><a href="#" onClick="do_checkout_all();">Checkout</a></p>
</div>
</li>
<li class="account3 account_function">
<span class="bold">WISH<br>LIST <img src="//www.starcitygames.com/images/arrow_account.png" width="9" height="6"></span>
<div class="account_function_page">
<table width="100%" border="0" cellspacing="0" cellpadding="0" id="wishlist_table">
<tr class="product_row">
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
</table>
</div>
</li>
</ul>
</div>
</div>
</div>
<div id="menu_wrap">
<div class="header_wrapper">
<nav id="product_menu">
<ul id="nav" class="dropdown">
<li id="nav_featured" class="main_menu">
<a href="http://www.starcitygames.com/content/landing_page"><img src="http://static.starcitygames.com/www/images/setLogo.png"/></a>
</li>
<li id="nav_singles" class="main_menu"><a href="#">Magic Singles</a>
<ul class="show_shadow">
<li><a href="http://www.starcitygames.com/cardsets/english_singles">English</a></li>
<li><a href="http://www.starcitygames.com/cardsets/english_foils">Foil English</a></li>
<li><a href="http://www.starcitygames.com/cardsets/non_english_singles">Non-English</a></li>
<li><a href="http://www.starcitygames.com/cardsets/non_english_foils">Foil Non-English</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5058">BGS/Graded Cards</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=141">Complete Sets</a></li>
<li><a href="http://www.starcitygames.com/cardsets/rarities/">Misprints and Rarities</a></li>
<li class="lastmenu"><a href="http://sales.starcitygames.com/category.php?t=a&cat=144">Wholesale Lots</a></li>
</ul>
</li>
<li id="nav_sealed" class="main_menu"><a href="#">Magic Sealed Product</a>
<ul class="show_shadow msp_equal">
<li class="msp_title_line">Expansion Sets</li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5121">Booster Packs</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5125">Booster Boxes</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5123">Starter &amp; Tourn. Packs</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5127">Starter &amp; Tourn. Displays</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5124">Theme Decks</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5206">Event Decks</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5122">Intro Packs</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5126">Fat Packs</a></li>
<li class="lastmenu"><a href="http://sales.starcitygames.com/category.php?t=a&cat=5128">Two-Player Games</a></li>
</ul>
<ul class="show_shadow msp_equal" style="margin-left:225px;">
<li class="msp_title_line">Standalone Sets</li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5230">Archenemy </a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5231">Commander </a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5232">Duel Decks</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5233">From the Vault</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5234">Planechase </a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5235">Premium Deck Series</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5129">Misc. Box Sets</a></li>
<li class="lastmenu msp_bottom"><a href="http://sales.starcitygames.com/spoiler/display.php?&s%5B5114%5D=5114&s%5B5317%5D=5317&s%5B5318%5D=5318&s%5B5319%5D=5319&s%5B5320%5D=5320&s%5B5321%5D=5321&s%5B5322%5D=5322&s%5B5323%5D=5323&s%5B5324%5D=5324&s%5B5325%5D=5325&s%5B5326%5D=5326&display=3&numpage=25">Non-English Sealed </a></li>
</ul>
</li>
<li id="nav_supplies" class="main_menu"><a href="#">Gaming Supplies</a>
<ul class="show_shadow">
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5088">Binders</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5204">Books &amp; Fat Pack Guides</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5091">Boxes &amp; Bags</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5092">Clothing</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5299">Collectibles</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5089">Deck Boxes</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5205">Dice</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5251">Life Counters</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5093">Miscellaneous</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=5090">Playmats</a></li>
<li class="lastmenu"><a href="http://sales.starcitygames.com/category.php?t=a&cat=153">Sleeves</a></li>
</ul>
</li>
<li id="nav_special" class="main_menu"><a href="#">Specialty Items</a>
<ul class="show_shadow">
<li><a href="http://www.starcitygames.com/content/cardboardcrack/">Cardboard Crack</a></li>
<li><a href="http://www.starcitygames.com/content/creaturecollection/">Creature Collection</a></li>
<li><a href="http://sales.starcitygames.com/search.php?substring=Funko+POP&go.x=0&go.y=0&go=GO&t_all=All&start_date=2010-01-29&end_date=2012-04-22&order_1=finish&limit=25&action=Show%2BDecks&card_qty%5B1%5D=1">Funko Pop! Vinyl Figures</a></li>
<li><a href="http://sales.starcitygames.com/category.php?t=a&cat=1">Gift Cards</a></li>
<li><a href="http://www.starcitygames.com/content/lithographs/">Lithographs</a></li>
<li class="lastmenu"><a href="http://www.starcitygames.com/content/nextlevel/">Next Level Library</a></li>
</ul>
</li>
<li id="nav_digital" class="main_menu"><a href="#">Digital Products</a>
<ul class="show_shadow">
<li><a href="http://www.starcitygames.com/content/completecommander/">Complete Commander</a></li>
<li><a href="http://www.starcitygames.com/content/nextlevel/">Next Level Library</a></li>
<li><a href="http://sales.starcitygames.com/omg/">OMG: Official Miser's Guide</a></li>
<li class="lastmenu"><a href="http://sales.starcitygames.com/carddisplay.php?product=267847">Tha Gatherin'</a></li>
</ul>
</li>
<li id="nav_webuy" class="main_menu"><a href="http://www.starcitygames.com/buylist/">We Buy <img src="http://static.starcitygames.com/www/images/magiclogo.png" width="82" height="23"></a></li>
</ul>
</nav>
</div>
</div>
</header>
<section id="body_content">
<div id="sidebar_background">
<section id="content" class="left">
<table width="100%" cellspacing="0" cellpadding="0" valign="top" align="center">
</table><div id="article_content" class="left clear"><div class="deck_listing2">
<div class="deck_header">
<div class="deck_info">
<header class="deck_title"><a href="http://sales.starcitygames.com/deckdatabase/displaydeck.php?DeckID=101059">Mono-White Humans</a></header>
<header class="player_name"><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?p_first=Max&p_last=McVety">Max McVety</a></header>
<header class="deck_played_placed">
1st Place at <a href="">StarCityGames.com Invitational</a> on 4/15/2016 </header>
</div>
<div class="deck_banners">
<div class="deck_format">Standard</div>
<div class="deck_function_buttons">
<div class="left"><a href="http://sales.starcitygames.com/deckdatabase/download_deck.php?DeckID=101059&Mode=modo"><img src="http://static.starcitygames.com/www/images/articles/mtgo.png" height="24" width="34"></a></div>
<div class="print-button deck-print-button"> <a href="http://sales.starcitygames.com/deckdatabase/displayprintdeck.php?DeckID=101059" target="_blank">&nbsp;</a> </div>
</div>
</div>
</div>
<div class="deck_separator"></div>
<div class="deck_card_wrapper">
<div class="cards_col1">
<h3 class="decklist_heading">Creatures (27)</h3>
<ul rel="101059">
<li>1 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Archangel+of+Tithes" rel="http://static.starcitygames.com/sales//cardscans/MTG/ORI/en/nonfoil/ArchangelOfTithes.jpg" target="new">Archangel of Tithes</a></li><li>4 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Consul%27s+Lieutenant" rel="http://static.starcitygames.com/sales//cardscans/MTG/ORI/en/nonfoil/ConsulsLieutenant.jpg" target="new">Consul's Lieutenant</a></li><li>3 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Dragon+Hunter" rel="http://static.starcitygames.com/sales//cardscans/MTG/DTK/en/nonfoil/DragonHunter.jpg" target="new">Dragon Hunter</a></li><li>4 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Knight+of+the+White+Orchid" rel="http://static.starcitygames.com/sales//cardscans/MTG/ORI/en/nonfoil/KnightOfTheWhiteOrchid.jpg" target="new">Knight of the White Orchid</a></li><li>4 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Thalia%27s+Lieutenant" rel="http://static.starcitygames.com/sales//cardscans/MTG/SOI/en/nonfoil/ThaliasLieutenant.jpg" target="new">Thalia's Lieutenant</a></li><li>4 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Thraben+Inspector" rel="http://static.starcitygames.com/sales//cardscans/MTG/SOI/en/nonfoil/ThrabenInspector.jpg" target="new">Thraben Inspector</a></li><li>4 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Town+Gossipmonger" rel="http://static.starcitygames.com/sales//cardscans/MTG/SOI/en/nonfoil/TownGossipmonger.jpg" target="new">Town Gossipmonger</a></li><li>3 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Kytheon%2C+Hero+of+Akros" rel="http://static.starcitygames.com/sales//cardscans/MTG/ORI/en/nonfoil/KytheonHeroOfAkros.jpg" target="new">Kytheon, Hero of Akros</a></li></ul> <h3 class="decklist_heading">Lands (20)</h3>
<ul rel="101059">
<li>20 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Plains" rel="http://static.starcitygames.com/sales//cardscans/MTG/ORI/en/nonfoil/Plains256.jpg" target="new">Plains</a></li></ul> </div>
<div class="cards_col2">
<h3 class="decklist_heading">Spells (13)</h3>
<ul rel="101059">
<li>4 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Always+Watching" rel="http://static.starcitygames.com/sales//cardscans/MTG/SOI/en/nonfoil/AlwaysWatching.jpg" target="new">Always Watching</a></li><li>3 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Gryff%27s+Boon" rel="http://static.starcitygames.com/sales//cardscans/MTG/SOI/en/nonfoil/GryffsBoon.jpg" target="new">Gryff's Boon</a></li><li>2 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Stasis+Snare" rel="http://static.starcitygames.com/sales//cardscans/MTG/BFZ/en/nonfoil/StasisSnare.jpg" target="new">Stasis Snare</a></li><li>4 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Declaration+in+Stone" rel="http://static.starcitygames.com/sales//cardscans/MTG/SOI/en/nonfoil/DeclarationInStone.jpg" target="new">Declaration in Stone</a></li></ul> <div class="deck_sideboard">
<ul rel="101059">
<h3 class="decklist_heading">Sideboard</h3>
<li>3 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Archangel+of+Tithes" rel="http://static.starcitygames.com/sales//cardscans/MTG/ORI/en/nonfoil/ArchangelOfTithes.jpg" target="new">Archangel of Tithes</a></li><li>3 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Hanweir+Militia+Captain" rel="http://static.starcitygames.com/sales//cardscans/MTG/SOI/en/nonfoil/HanweirMilitiaCaptain.jpg" target="new">Hanweir Militia Captain</a></li><li>1 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Hidden+Dragonslayer" rel="http://static.starcitygames.com/sales//cardscans/MTG/DTK/en/nonfoil/HiddenDragonslayer.jpg" target="new">Hidden Dragonslayer</a></li><li>3 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Silkwrap" rel="http://static.starcitygames.com/sales//cardscans/MTG/DTK/en/nonfoil/Silkwrap.jpg" target="new">Silkwrap</a></li><li>1 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Stasis+Snare" rel="http://static.starcitygames.com/sales//cardscans/MTG/BFZ/en/nonfoil/StasisSnare.jpg" target="new">Stasis Snare</a></li><li>2 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Eerie+Interlude" rel="http://static.starcitygames.com/sales//cardscans/MTG/SOI/en/nonfoil/EerieInterlude.jpg" target="new">Eerie Interlude</a></li><li>2 <a href="http://sales.starcitygames.com/cardsearch.php?singlesearch=Hallowed+Moonlight" rel="http://static.starcitygames.com/sales//cardscans/MTG/ORI/en/nonfoil/HallowedMoonlight.jpg" target="new">Hallowed Moonlight</a></li> </ul>
</div>
</div>
<div class="card_preview"><img id="deck_101059" src="http://static.starcitygames.com/sales//cardscans/mr224_back.jpg" width="220" height="310">
<div class="deck_social_buttons">
<div class="fb-like left" data-href="http://scg.im/d101059" data-layout="button_count" data-action="like" data-show-faces="false" data-share="true"></div>
<div class="left" style="padding-right:10px;">&nbsp;</div>
<div class="twitter-button left">
<a href="https://twitter.com/share" class="twitter-share-button" data-url="http://scg.im/d101059" target="_blank" data-count="horizontal">&nbsp;</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
</div>
<div class="clear"></div>
<div class="reddit-button left">
<a href="//www.reddit.com/submit" onclick="window.location = '//www.reddit.com/submit?url=' + encodeURIComponent(window.location); return false"> </a>
</div>
<div class="clear"></div>
</div>
</div>
<br class="clear"/>
</div>
</div>
<br>
</div>
</table>
 
</section>
<aside id="sidebar" class="left">
<article id="fp_scglive_ad">
<a href="http://www.starcitygames.com/content/states"><img src="https://static.starcitygames.com/www//images/sidebar/spring_states_2016.png" border="0"></a><br/>
</article>
<style type="text/css">#openseries header{padding-top:12px;height:23px;}</style>
<article class="sidebox" id="openseries">
<header><a href="http://www.starcitygames.com/content/scgtour/">ORGANIZED PLAY</a></header>
<div class="container_decks">
<section>
<nav>
<ul style="margin: 0px; height:60px;">
<li class="center"><a href="http://www.starcitygames.com/gneventfinder/"><img src="https://static.starcitygames.com/www/images/banners/media/organizedplay/gnSidebar2.png"/></a></li>
</ul>
<ul id="events_nav"><li id="tab1a" class="active"><a href="#thisweekend">THIS WEEK</a></li><li id="tab2a" class=""><a href="#nextweekend">NEXT WEEK</a></li><li id="tab3a" class=""><a href="#scgevents">+</a></li></ul>
</nav>
<div id="thisweekend" class="content">
<ul class="scg_events">
<li class="upper iq_title">THIS Thursday, April 21</li>
<li style="background-color:white;color:#2C599C;line-height:18px;font-size:14px;font-weight:bolder;margin:5px -5px 0px -5px;padding:0px 5px 0px 5px;text-transform:uppercase;border-bottom:1px solid #2C599C;border-top:1px solid #2C599C">Invitational Qualifiers</li>
<li><a href="https://www.facebook.com/events/216734092016670/">
<span class="iq_loc">East Windsor, NJ</span> - Gamer's Realm Hobby </a></li>
<li class="upper iq_title">THIS Saturday, April 23</li>
<li class="center"><a href="/content/states#sc-map-box">
<span class="iq_type states"><strong>STATE CHAMPIONSHIP WEEKEND</strong></span><br/>
<span class="iq_loc">FIND YOUR STATE!</span></a>
</li>
<li class="upper iq_title">THIS Sunday, April 24</li>
<li class="center"><a href="/content/states#sc-map-box">
<span class="iq_type states"><strong>STATE CHAMPIONSHIP WEEKEND</strong></span><br/>
<span class="iq_loc">FIND YOUR STATE!</span></a>
</li>
</ul>
</div>
<div id="nextweekend" class="content">
<ul class="scg_events">
<li class="upper iq_title">Thursday, April 28</li>
<li style="background-color:white;color:#2C599C;line-height:18px;font-size:14px;font-weight:bolder;margin:5px -5px 0px -5px;padding:0px 5px 0px 5px;text-transform:uppercase;border-bottom:1px solid #2C599C;border-top:1px solid #2C599C">Invitational Qualifiers</li>
<li><a href="https://www.facebook.com/events/1680672618850743/">
<span class="iq_loc">East Windsor, NJ</span> - Gamer's Realm Hobby </a></li>
<li class="upper iq_title">Friday, April 29</li>
<li style="background-color:white;color:#2C599C;line-height:18px;font-size:14px;font-weight:bolder;margin:5px -5px 0px -5px;padding:0px 5px 0px 5px;text-transform:uppercase;border-bottom:1px solid #2C599C;border-top:1px solid #2C599C">Invitational Qualifiers</li>
<li><a href="https://www.facebook.com/events/927351287359243/">
<span class="iq_loc">Lexington, KY</span> - Legendary Games </a></li>
<li class="upper iq_title">Saturday, April 30</li>
<li><a href="http://www.starcitygames.com/events/300416_milwaukee_fact_sheet.html"><span class="iq_type scg_open">
<img src="https://static.starcitygames.com/www/images/events/t_open.png"> Milwaukee <strong>OPEN</strong>
</span></a></li>
<li style="background-color:white;color:#00C7EC;line-height:18px;font-size:14px;font-weight:bolder;margin:5px -5px 0px -5px;padding:0px 5px 0px 5px;text-transform:uppercase;border-bottom:1px solid #00C7EC;border-top:1px solid #00C7EC">Super Invitational Qualifiers</li>
<li><a href="https://www.facebook.com/events/801333570013450/">
<span class="iq_loc">Cayce, SC</span> - Ready to Play Trading Cards </a></li>
<li><a href="https://www.facebook.com/events/162136260818339/">
<span class="iq_loc">Newington, CT</span> - Your Friendly Neighborhood Tabletop Shop </a></li>
<li><a href="https://www.facebook.com/events/1500378190271042/">
<span class="iq_loc">Raleigh, NC</span> - Event Horizon Games </a></li>
<li style="background-color:white;color:#2C599C;line-height:18px;font-size:14px;font-weight:bolder;margin:5px -5px 0px -5px;padding:0px 5px 0px 5px;text-transform:uppercase;border-bottom:1px solid #2C599C;border-top:1px solid #2C599C">Invitational Qualifiers</li>
<li><a href="https://www.facebook.com/events/1954424074783000/">
<span class="iq_loc">Abingdon, MD</span> - Critical Hit Games </a></li>
<li><a href="https://www.facebook.com/events/1566492156994538/">
<span class="iq_loc">Huntington, WV</span> - Hometown Hobbies </a></li>
<li><a href="https://www.facebook.com/events/172197243138196/">
<span class="iq_loc">Lafayette, IN</span> - Legendary Games </a></li>
<li><a href="https://www.facebook.com/events/453787678164186/">
<span class="iq_loc">Lexington, KY</span> - Legendary Games </a></li>
<li><a href="https://www.facebook.com/events/1672700066350684/">
<span class="iq_loc">Newington, CT</span> - Your Friendly Neighborhood Tabletop Shop </a></li>
<li><a href="https://www.facebook.com/events/1740293282867462/">
<span class="iq_loc">Springfield, VA</span> - Curio Cavern </a></li>
<li><a href="https://www.facebook.com/events/1541530709509727/">
<span class="iq_loc">St Joseph, MO</span> - Galaxy Games </a></li>
<li><a href="https://www.facebook.com/events/237826009881727/">
<span class="iq_loc">Stroudsburg, PA</span> - The Gamer's Edge </a></li>
<li class="upper iq_title">Sunday, May 1</li>
<li><a href="http://www.starcitygames.com/events/300416_milwaukee_fact_sheet.html"><span class="iq_type scg_open">
<img src="https://static.starcitygames.com/www/images/events/t_open.png"> Milwaukee <strong>OPEN</strong>
</span></a></li>
<li style="background-color:white;color:#00C7EC;line-height:18px;font-size:14px;font-weight:bolder;margin:5px -5px 0px -5px;padding:0px 5px 0px 5px;text-transform:uppercase;border-bottom:1px solid #00C7EC;border-top:1px solid #00C7EC">Super Invitational Qualifiers</li>
<li><a href="https://www.facebook.com/events/421619968047535/">
<span class="iq_loc">East Windsor, CT</span> - Ice Imports </a></li>
<li style="background-color:white;color:#2C599C;line-height:18px;font-size:14px;font-weight:bolder;margin:5px -5px 0px -5px;padding:0px 5px 0px 5px;text-transform:uppercase;border-bottom:1px solid #2C599C;border-top:1px solid #2C599C">Invitational Qualifiers</li>
<li><a href="https://www.facebook.com/events/975518905875623/">
<span class="iq_loc">Arvada, CO</span> - Game Heroes </a></li>
<li><a href="https://www.facebook.com/events/588663231288357/">
<span class="iq_loc">Dalton, GA</span> - The Battlegrounds Games and Comics </a></li>
<li><a href="https://www.facebook.com/events/209057849443077/">
<span class="iq_loc">Lexington, KY</span> - Legendary Games </a></li>
<li><a href="https://www.facebook.com/events/783409625098360/">
<span class="iq_loc">York, PA</span> - The Gamers Realm </a></li>
</ul>
</div>
<div id="scgevents" class="content">
<p class="event_title">SCG TOUR<sup>&trade;</sup> EVENTS</p>
<ul class="scg_events">
<li>
<a href="/content/states#sc-map-box"><span class="event_type">Apr 23 - 24:</span>
USA <strong>STATES</strong>
</a>
</li>
<li>
<a href="http://www.starcitygames.com/events/300416_milwaukee_fact_sheet.html"><span class="event_type">Apr 30 - May 1:</span>
Milwaukee <strong>OPEN</strong>
</a>
</li>
<li>
<a href="http://www.starcitygames.com/events/140516_indianapolis_fact_sheet.html"><span class="event_type">May 14 - 15:</span>
Indianapolis <strong>OPEN</strong>
</a>
</li>
<li>
<a href="http://www.starcitygames.com/events/040616_atlanta_fact_sheet.html"><span class="event_type">Jun 4 - 5:</span>
Atlanta <strong>OPEN</strong>
</a>
</li>
<li>
<a href="http://www.starcitygames.com/events/180616_orlando_fact_sheet.html"><span class="event_type">Jun 18 - 19:</span>
Orlando <strong>OPEN</strong>
</a>
</li>
<li>
<a href="http://www.starcitygames.com/events/250616_dallas_fact_sheet.html"><span class="event_type">Jun 25 - 26:</span>
Dallas <strong>OPEN</strong>
</a>
</li>
<li>
<a href="http://www.starcitygames.com/events/090716_worcester_fact_sheet.html"><span class="event_type">Jul 9 - 10:</span>
Worcester <strong>OPEN</strong>
</a>
</li>
<li>
<a href="http://www.starcitygames.com/events/230716_columbus_fact_sheet.html"><span class="event_type">Jul 23 - 24:</span>
Columbus <strong>OPEN</strong>
</a>
</li>
<li>
<a href="http://www.starcitygames.com/events/300716_baltimore_fact_sheet.html"><span class="event_type">Jul 30 - 31:</span>
Baltimore <strong>OPEN</strong>
</a>
</li>
<li>
<a href="http://www.starcitygames.com/events/130816_syracuse_fact_sheet.html"><span class="event_type">Aug 13 - 14:</span>
Syracuse <strong>OPEN</strong>
</a>
</li>
</ul>
</div>
<form action="//www.starcitygames.com/eventfinder/index.php" method="post" id="event_form">
<p class="center">EVENT FINDER <input class="address_box" maxlength="5" size="9" value="" name="zip_code" id="zip_code" type="text" placeholder="ZIPCODE">
<input name="imageField" id="imageField" src="/images/event_go.jpg" type="image"></p>
</form>
<ul style="margin:0 0 5px;">
<li class="italics center">
<a href="http://www.starcitygames.com/content/schedule">Complete SCG Tour Schedule</a> | <a href="http://www.starcitygames.com/content/archive">Coverage Archive</a>
</li>
</ul>
</section>
</div>
</article>
<style>#sb_leaderboard{color:black;}#sb_leaderboard a,#sb_leaderboard a:hover,#sb_leaderboard a:visited,#sb_leaderboard a:link,#sb_leaderboard a:visited{color:black;text-decoration:none;}#sb_leaderboard img{}#sb_leaderboard table{width:100%;}#sb_leaderboard tr{line-height:16px;}.sb_leaderboard_place{width:10%;text-align:right;padding-right:5%;padding-left:5%;}.sb_leaderboard_name{width:65%;}.sb_leaderboard_points{width:15%;padding-right:5%;text-align:right;}.lb_odd{background-color:#FFFFFF;}.lb_even{background-color:#F0F0F0;}</style>
<article class="sidebox" id="sb_leaderboard">
<a href="http://www.starcitygames.com/leaderboard"><img src="https://static.starcitygames.com/www//images/banners/media/playersChampionship/sidebarLeaderboardHeader2.png"/>
<table>
<tbody>
<tr class="lb_odd">
<td class="sb_leaderboard_place">1</td>
<td class="sb_leaderboard_name">JEFF HOOGLAND</td>
<td class="sb_leaderboard_points">130</td>
</tr>
<tr class="lb_even">
<td class="sb_leaderboard_place">2</td>
<td class="sb_leaderboard_name">JOE LOSSETT</td>
<td class="sb_leaderboard_points">107</td>
</tr>
<tr class="lb_odd">
<td class="sb_leaderboard_place">3</td>
<td class="sb_leaderboard_name">ANDREW TENJUM</td>
<td class="sb_leaderboard_points">101</td>
</tr>
<tr class="lb_even">
<td class="sb_leaderboard_place">4</td>
<td class="sb_leaderboard_name">GERRY THOMPSON</td>
<td class="sb_leaderboard_points">97</td>
</tr>
<tr class="lb_odd">
<td class="sb_leaderboard_place">5</td>
<td class="sb_leaderboard_name">BRADLEY CARPENTER</td>
<td class="sb_leaderboard_points">93</td>
</tr>
<tr class="lb_even">
<td class="sb_leaderboard_place">6</td>
<td class="sb_leaderboard_name">HARLAN FIRER</td>
<td class="sb_leaderboard_points">87</td>
</tr>
<tr class="lb_odd">
<td class="sb_leaderboard_place">7</td>
<td class="sb_leaderboard_name">CALEB W SCHERER</td>
<td class="sb_leaderboard_points">81</td>
</tr>
<tr class="lb_even">
<td class="sb_leaderboard_place">8</td>
<td class="sb_leaderboard_name">TODD ANDERSON</td>
<td class="sb_leaderboard_points">78</td>
</tr>
<tr class="lb_odd">
<td class="sb_leaderboard_place">9</td>
<td class="sb_leaderboard_name">TOM ROSS</td>
<td class="sb_leaderboard_points">73</td>
</tr>
<tr class="lb_even">
<td class="sb_leaderboard_place">10</td>
<td class="sb_leaderboard_name">BRIAN S BRAUN-DUIN</td>
<td class="sb_leaderboard_points">71</td>
</tr>
<tr class="lb_odd">
<td class="sb_leaderboard_place">11</td>
<td class="sb_leaderboard_name">ANDY FERGUSON</td>
<td class="sb_leaderboard_points">70</td>
</tr>
<tr class="lb_even">
<td class="sb_leaderboard_place">12</td>
<td class="sb_leaderboard_name">CHRISTOPHER JULIANO</td>
<td class="sb_leaderboard_points">69</td>
</tr>
<tr class="lb_odd">
<td class="sb_leaderboard_place">13</td>
<td class="sb_leaderboard_name">ALI I AINTRAZI</td>
<td class="sb_leaderboard_points">68</td>
</tr>
<tr class="lb_even">
<td class="sb_leaderboard_place">14</td>
<td class="sb_leaderboard_name">TODD STEVENS</td>
<td class="sb_leaderboard_points">67</td>
</tr>
<tr class="lb_odd">
<td class="sb_leaderboard_place">15</td>
<td class="sb_leaderboard_name">KENT KETTER</td>
<td class="sb_leaderboard_points">64</td>
</tr>
<tr class="lb_even">
<td class="sb_leaderboard_place">16</td>
<td class="sb_leaderboard_name">JACOB BAUGH</td>
<td class="sb_leaderboard_points">63</td>
</tr>
</tbody>
</table>
</a>
</article> <article class="sidebox" id="weeklynewsletter">
<header>WEEKLY NEWSLETTER</header>
<section>
<form name="ccoptin" action="//visitor.constantcontact.com/d.jsp" target="_blank" method="post"><input name="ea" size="20" value="" type="text" id="email_newsletter" placeholder="ENTER YOUR EMAIL"><input name="go" value="Sign Up!" type="image" src="/images/signup.jpg"><input type="hidden" name="m" value="1103337725524">
<input type="hidden" name="p" value="oi"></form>
<p class="center"><strong>Exclusive Deals &amp; Content Every Week</strong></p>
</section>
</article><style>.social_icon{float:left;margin:5px 10px 5px 10px;width:43px;}.social_text{float:left;margin:10px 0 0 0;font-size:13px;}.social_text p{margin-bottom:5px;}</style>
<article class="sidebox" id="social">
<header><a href="https://www.facebook.com/StarCityGames">SOCIAL</a></header>
<section>
<div class="social_wrapper">
<div class="social_icon">
<a href="https://www.facebook.com/StarCityGames"><img src="https://static.starcitygames.com/www/images/sidebar/Facebook.jpg"></a>
</div>
<div class="social_text">
<p><a href="https://www.facebook.com/StarCityGames">StarCityGames.com<sup>&reg;</sup> on Facebook</a></p>
<fb:like href="https://www.facebook.com/StarCityGames" width="280" layout="button_count" action="like" show_faces="false" share="false"></fb:like>
</div>
</div>
<br class="clear">
<div class="social_wrapper">
<div class="social_icon">
<a href="https://twitter.com/starcitygames"><img src="https://static.starcitygames.com/www/images/sidebar/Twitter.jpg"></a>
</div>
<div class="social_text">
<p><a href="https://twitter.com/starcitygames">StarCityGames.com<sup>&reg;</sup> on Twitter</a></p>
<p><a href="https://twitter.com/starcitygames">Join the conversation</a></p>
</div>
</div>
<br class="clear">
<div class="social_wrapper">
<div class="social_icon">
<a href="https://www.youtube.com/user/starcitygamesvideo"><img src="https://static.starcitygames.com/www/images/sidebar/youTube.jpg"></a>
</div>
<div class="social_text">
<p><a href="https://www.youtube.com/user/starcitygamesvideo">StarCityGames.com<sup>&reg;</sup> on YouTube</a></p>
<p><a href="https://www.youtube.com/user/starcitygamesvideo">Watch the best in Magic Video</a></p>
</div>
</div>
<br class="clear">
</section>
</article>
<article class="sidebox" id="decklists">
<header><a href="http://www.starcitygames.com/content/decklists/">DECKLISTS</a></header>
<div class="container_decks">
<section>
<nav>
<ul id="decklist_nav">
<li class="active" id="tab1"><a href="#content_decks_standard">STANDARD</a></li><li id="tab2"><a href="#content_decks_modern">MODERN</a></li><li id="tab3"><a href="#content_decks_legacy">LEGACY</a></li> 
</ul>
</nav>
<div id="content_decks_standard" class="content deck_size">
<ul>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=19&t[T1]=1&start_date=2016-04-16&end_date=2016-04-16&state=OH&city=Columbus&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/16 SCG Open Columbus, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=21&t[T1]=1&start_date=2016-04-15&end_date=2016-04-15&state=OH&city=Columbus&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/15 SCG Invitational Columbus, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=21&t[T1]=1&start_date=2016-04-15&end_date=2016-04-15&state=OH&city=Columbus&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/15 SCG Invitational Columbus, </a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T1]=1&start_date=2016-04-10&end_date=2016-04-10&state=MA&city=Wilbraham&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/10 Invi Qualifier Wilbraham, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T1]=1&start_date=2016-04-09&end_date=2016-04-09&state=VA&city=Abingdon&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 Invi Qualifier Abingdon, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T1]=1&start_date=2016-04-09&end_date=2016-04-09&state=FL&city=St Augustine&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 Invi Qualifier St Augustine, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T1]=1&start_date=2016-04-09&end_date=2016-04-09&state=TX&city=Conroe&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 Invi Qualifier Conroe, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T1]=1&start_date=2016-04-09&end_date=2016-04-09&state=NY&city=Catskill&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 Invi Qualifier Catskill, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=33&t[T1]=1&start_date=2016-04-09&end_date=2016-04-09&state=CT&city=Newington&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 SCG Super IQ Newington, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=33&t[T1]=1&start_date=2016-04-09&end_date=2016-04-09&state=GA&city=Augusta&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 SCG Super IQ Augusta, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T1]=1&start_date=2016-04-09&end_date=2016-04-09&state=CO&city=Colorado Springs&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 Invi Qualifier Colorado Springs, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T1]=1&start_date=2016-04-09&end_date=2016-04-09&state=CT&city=Newington&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 Invi Qualifier Newington, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=19&t[T1]=1&start_date=2016-04-09&end_date=2016-04-09&state=MD&city=Baltimore&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 SCG Open Baltimore, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=19&t[T1]=1&start_date=2016-04-09&end_date=2016-04-09&state=MD&city=Baltimore&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 SCG Open Baltimore, </a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T1]=1&start_date=2016-03-31&end_date=2016-03-31&state=NJ&city=East Windsor&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/31 Invi Qualifier East Windsor, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T1]=1&start_date=2016-03-27&end_date=2016-03-27&state=GA&city=Dalton&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/27 Invi Qualifier Dalton, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T1]=1&start_date=2016-03-26&end_date=2016-03-26&state=PA&city=Monroeville&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/26 Invi Qualifier Monroeville, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=33&t[T1]=1&start_date=2016-03-26&end_date=2016-03-26&state=WI&city=Eau Claire&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/26 SCG Super IQ Eau Claire, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T1]=1&start_date=2016-03-26&end_date=2016-03-26&state=AL&city=Athens&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/26 Invi Qualifier Athens, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T1]=1&start_date=2016-03-26&end_date=2016-03-26&state=CT&city=Danbury&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/26 Invi Qualifier Danbury, US</a></li>
</ul>
<div class="decks_footer"><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?t[T1]=1&start_date=2016-03-18&end_date=2016-04-18&limit=25&action=Show+Decks">View More Standard Decks</a> - <a href="http://sales.starcitygames.com/deckdatabase/index.php">Search Decklists</a></div>
</div>
<div id="content_decks_modern" class="content deck_size">
<ul>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=36&t[T2]=28&start_date=2016-04-17&end_date=2016-04-17&state=OH&city=Columbus&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/17 SCG Classic Columbus, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=36&t[T2]=28&start_date=2016-04-17&end_date=2016-04-17&state=OH&city=Columbus&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/17 SCG Classic Columbus, </a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=21&t[T2]=28&start_date=2016-04-15&end_date=2016-04-15&state=OH&city=Columbus&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/15 SCG Invitational Columbus, </a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=21&t[T2]=28&start_date=2016-04-15&end_date=2016-04-15&state=OH&city=Columbus&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/15 SCG Invitational Columbus, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T2]=28&start_date=2016-04-10&end_date=2016-04-10&state=OH&city=Columbus&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/10 Invi Qualifier Columbus, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T2]=28&start_date=2016-04-10&end_date=2016-04-10&state=GA&city=Dalton&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/10 Invi Qualifier Dalton, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=36&t[T2]=28&start_date=2016-04-10&end_date=2016-04-10&state=MD&city=Baltimore&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/10 SCG Classic Baltimore, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T2]=28&start_date=2016-04-09&end_date=2016-04-09&state=MO&city=St Joseph&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 Invi Qualifier St Joseph, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T2]=28&start_date=2016-04-09&end_date=2016-04-09&state=AL&city=Athens&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 Invi Qualifier Athens, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T2]=28&start_date=2016-04-09&end_date=2016-04-09&state=SC&city=Myrtle Beach&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 Invi Qualifier Myrtle Beach, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T2]=28&start_date=2016-04-09&end_date=2016-04-09&state=IL&city=Moline&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 Invi Qualifier Moline, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=33&t[T2]=28&start_date=2016-04-09&end_date=2016-04-09&state=MI&city=Garden City&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 SCG Super IQ Garden City, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T2]=28&start_date=2016-04-09&end_date=2016-04-09&state=MO&city=Columbia&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/09 Invi Qualifier Columbia, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T2]=28&start_date=2016-03-26&end_date=2016-03-26&state=MO&city=Columbia&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/26 Invi Qualifier Columbia, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T2]=28&start_date=2016-03-26&end_date=2016-03-26&state=MD&city=Rockville&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/26 Invi Qualifier Rockville, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T2]=28&start_date=2016-03-26&end_date=2016-03-26&state=DE&city=Dover&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/26 Invi Qualifier Dover, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T2]=28&start_date=2016-03-26&end_date=2016-03-26&state=FL&city=Crestview&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/26 Invi Qualifier Crestview, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T2]=28&start_date=2016-03-26&end_date=2016-03-26&state=KY&city=Lexington&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/26 Invi Qualifier Lexington, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=33&t[T2]=28&start_date=2016-03-26&end_date=2016-03-26&state=NH&city=Lebanon&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/26 SCG Super IQ Lebanon, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T2]=28&start_date=2016-03-26&end_date=2016-03-26&state=PA&city=Erie&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/26 Invi Qualifier Erie, US</a></li>
</ul>
<div class="decks_footer"><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?t[T2]=28&start_date=2016-03-18&end_date=2016-04-18&limit=25&action=Show+Decks">View More Modern Decks</a> - <a href="http://sales.starcitygames.com/deckdatabase/index.php">Search Decklists</a></div>
</div>
<div id="content_decks_legacy" class="content deck_size">
<ul>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=36&t[T3]=3&start_date=2016-04-17&end_date=2016-04-17&state=OH&city=Columbus&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/17 SCG Classic Columbus, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=33&t[T3]=3&start_date=2016-04-10&end_date=2016-04-10&state=MO&city=Columbia&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/10 SCG Super IQ Columbia, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=36&t[T3]=3&start_date=2016-04-10&end_date=2016-04-10&state=MD&city=Baltimore&order_1=finish&limit=8&t_num=1&action=Show+Decks">4/10 SCG Classic Baltimore, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=33&t[T3]=3&start_date=2016-03-27&end_date=2016-03-27&state=MO&city=Columbia&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/27 SCG Super IQ Columbia, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T3]=3&start_date=2016-03-26&end_date=2016-03-26&state=IN&city=Lafayette&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/26 Invi Qualifier Lafayette, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T3]=3&start_date=2016-03-26&end_date=2016-03-26&state=OH&city=Findlay&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/26 Invi Qualifier Findlay, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T3]=3&start_date=2016-03-25&end_date=2016-03-25&state=VA&city=Springfield&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/25 Invi Qualifier Springfield, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T3]=3&start_date=2016-03-20&end_date=2016-03-20&state=TN&city=Gatlinburg&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/20 Invi Qualifier Gatlinburg, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T3]=3&start_date=2016-03-20&end_date=2016-03-20&state=VA&city=Roanoke&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/20 Invi Qualifier Roanoke, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=36&t[T3]=3&start_date=2016-03-20&end_date=2016-03-20&state=IN&city=Indianapolis&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/20 SCG Classic Indianapolis, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T3]=3&start_date=2016-03-12&end_date=2016-03-12&state=LA&city=Prairieville&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/12 Invi Qualifier Prairieville, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T3]=3&start_date=2016-03-12&end_date=2016-03-12&state=MO&city=Springfield&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/12 Invi Qualifier Springfield, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T3]=3&start_date=2016-03-10&end_date=2016-03-10&state=NJ&city=East Windsor&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/10 Invi Qualifier East Windsor, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T3]=3&start_date=2016-03-06&end_date=2016-03-06&state=GA&city=Dalton&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/06 Invi Qualifier Dalton, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T3]=3&start_date=2016-03-05&end_date=2016-03-05&state=KY&city=Lexington&order_1=finish&limit=8&t_num=1&action=Show+Decks">3/05 Invi Qualifier Lexington, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=33&t[T3]=3&start_date=2016-02-28&end_date=2016-02-28&state=MO&city=Columbia&order_1=finish&limit=8&t_num=1&action=Show+Decks">2/28 SCG Super IQ Columbia, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=20&t[T3]=3&start_date=2016-02-27&end_date=2016-02-27&state=PA&city=Philadelphia&order_1=finish&limit=8&t_num=1&action=Show+Decks">2/27 SCG Open Philadelphia, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T3]=3&start_date=2016-02-21&end_date=2016-02-21&state=CT&city=Newington&order_1=finish&limit=8&t_num=1&action=Show+Decks">2/21 Invi Qualifier Newington, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=36&t[T3]=3&start_date=2016-02-21&end_date=2016-02-21&state=KY&city=Louisville&order_1=finish&limit=8&t_num=1&action=Show+Decks">2/21 SCG Classic Louisville, US</a></li>
<li><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?event_ID=29&t[T3]=3&start_date=2016-02-18&end_date=2016-02-18&state=NJ&city=East Windsor&order_1=finish&limit=8&t_num=1&action=Show+Decks">2/18 Invi Qualifier East Windsor, US</a></li>
</ul>
<div class="decks_footer"><a href="http://sales.starcitygames.com/deckdatabase/deckshow.php?t[T3]=3&start_date=2016-03-18&end_date=2016-04-18&limit=25&action=Show+Decks">View More Legacy Decks</a> - <a href="http://sales.starcitygames.com/deckdatabase/index.php">Search Decklists</a></div>
</div>
 
</section></div>
</article>
<article id="seals">
<section style="margin-top:10px;border:0;">
<div class="left" style="width:282px;">
<table border="0" style="width:100%;" cellpadding="2" cellspacing="0" title="Click to Verify - This site chose Comodo Positve SSL for secure e-commerce and confidential communications.">
<tr>
<td style="width:50%;vertical-align:middle;text-align: center;">
<a href="https://www.positivessl.com" style="font-family: arial; font-size: 10px; color: #212121; text-decoration: none;"><img src="https://static.starcitygames.com/www/images/footer/PositiveSSL_tl_trans.gif" alt="" title="" border="0"/></a>
</td>
<td style="width:50%;vertical-align:middle;text-align: center;">
<img src="https://static.starcitygames.com/www/images/footer/wotc_authorized.png">
</td>
</tr>
</table>
</div>
<div class="clear"></div>
</section>
</article>
<article id="payment_options_sidebar" style="width:282px; padding: 5px;">
<section>
<a href="http://sales.starcitygames.com/FAQ.php#payment" style="text-decoration: none;"><img src="https://static.starcitygames.com/www/images/footer/paymentOptions.jpg" alt="" title="" border="0" width="272" height="80.5"/></a>
</section>
</article>
</aside>
<br class="clear">
</div>
</section>
<footer id="main_footer" class="clear">
<aside>
<div id="article_bar"><h1>&nbsp;</h1>
</div>
<div id="sidebar_bar"><div id="sidebar_bar_sub"></div></div>
</aside>
<nav id="footer_account">
<header>ACCOUNT</header>
<ul>
<li><a href="https://www.starcitygames.com/myaccount/signup">Create an Account</a></li>
<li><a href="https://www.starcitygames.com/myaccount/">My Account</a></li>
<li><a href="https://www.starcitygames.com/myaccount/orders">Order History</a></li>
<li><a href="https://www.starcitygames.com/myaccount/credit">Store Credit</a></li>
<li><a href="http://sales.starcitygames.com/wishlist.php">Wishlists</a></li>
<li><a href="https://www.starcitygames.com/myaccount/premium/">Premium</a></li>
<li><a href="https://www.starcitygames.com/myaccount/downloads">Digital Products</a></li>
<li><a href="https://www.starcitygames.com/myaccount/giftcards">Gift Cards</a></li>
</ul>
</nav>
<nav id="footer_contact">
<header>CONTACT US</header>
<ul>
<li><a href="https://sales.starcitygames.com/contactus/contactform.php?emailid=11">Customer Service</a></li>
<li><a href="https://sales.starcitygames.com/contactus/contactform.php?emailid=6">Selling to SCG</a></li>
<li><a href="https://sales.starcitygames.com/contactus/contactform.php?emailid=11">Order Issues</a></li>
<li><a href="https://sales.starcitygames.com/contactus/contactform.php?emailid=8">Inventory Issues</a></li>
<li><a href="https://sales.starcitygames.com/contactus/contactform.php?emailid=23">Shipping</a></li>
<li><a href="https://sales.starcitygames.com/contactus/contactform.php?emailid=10">Premium</a></li>
<li><a href="https://sales.starcitygames.com/contactus/contactform.php?emailid=20">Gift Cards</a></li>
<li><a href="https://sales.starcitygames.com/contactus/contactform.php?emailid=5">Organized Play</a></li>
<li><a href="https://sales.starcitygames.com/contactus/contactform.php?emailid=24">In-Store Programs (ISP)</a></li>
<li><a href="https://sales.starcitygames.com/contactus/contactform.php?emailid=2">Articles/Videos</a></li>
<li><a href="https://sales.starcitygames.com/contactus/contactform.php?emailid=17">Advertising</a></li>
<li><a href="https://sales.starcitygames.com/contactus/contactform.php?emailid=14">Website Bugs/Problems</a></li>
</ul>
</nav>
<nav id="footer_order">
<header>ORDER QUESTIONS</header>
<ul>
<li class="footer_blue">
Customer Service Hours<br>
Monday through Friday<br/>
10am - 5pm ET<br/>
Ph: (540) 767-GAME (4263)<br/>
<br/>
</li>
<li><a href="https://sales.starcitygames.com/contactus/contactform.php?emailid=11">Email</a></li>
<li><a href="http://sales.starcitygames.com/FAQ.php">Frequently Asked Questions</a></a></li>
<li><a href="http://sales.starcitygames.com/FAQ.php?ID=39">Refund/Return Policy</a></li>
<li><a href="http://sales.starcitygames.com/FAQ.php?ID=91">Terms &amp; Conditions</a></li>
<li><a href="http://sales.starcitygames.com/FAQ.php?ID=90">Privacy Statement</a></li>
<li><a href="http://www.starcitygames.com/content/about">About StarCityGames.com<sup>&reg;</sup></a></li>
</ul>
</nav>
<nav id="footer_open_series">
<header>SCG ORGANIZED PLAY</header>
<ul>
<li><a href="http://www.starcitygames.com/content/scgtour">SCG Tour Overview</a></li>
<li><a href="http://www.starcitygames.com/content/schedule">SCG Tour Schedule</a></li>
<li><a href="http://www.starcitygames.com/leaderboard">SCG Tour Leaderboard</a></li>
<li><a href="http://www.starcitygames.com/content/playerschampionship">Players' Championship</a></li>
<li><a href="http://static.starcitygames.com/www/pdfs/Tournament_Policy.pdf">Tournament Policies</a></li>
</ul>
<header>IN-STORE PROGRAMS</header>
<ul>
<li><a href="http://www.starcitygames.com/content/iq">Invitational Qualifiers (IQs)</a></li>
<li><a href="http://isp.starcitygames.com/invitational-qualifiers/">Host an IQ in Your Store</a></li>
<li><a href="http://www.starcitygames.com/gneventfinder/">Game Night</a></li>
<li><a href="http://isp.starcitygames.com/game-night">Host Game Night in Your Store</a></li>
</ul>
</nav>
<nav id="footer_center">
<header>GAME CENTER</header>
<ul>
<li class="footer_blue">
Star City Game Center<br>
5728 Williamson Road N.W.<br/>
Roanoke, VA 24012<br/>
Ph: (540) 767-GAME(4263)<br/>
<br/>
</li>
<li><a href="https://sales.starcitygames.com/contactus/contactform.php?emailid=7">Email</a></li>
<li><a href="http://www.starcitygames.com/content/gamecenter/">Hours &amp; Event Schedule</a></li>
<li><a href="https://www.facebook.com/scgamecenter">Game Center Facebook</a></li>
<li><a href="https://twitter.com/SCGameCenter">Game Center Twitter</a></li>
</ul>
</nav>
<nav id="footer_last">
<header>MORE SCG</header>
<ul>
<li><a href="http://careers.starcitygames.com">Careers</a></li>
<li><a href="http://www.facebook.com/StarCityGames" target="_blank">SCG Facebook</a></li>
<li><a href="http://twitter.com/starcitygames" target="_blank">SCG Twitter</a></li>
<li><a href="http://www.starcitygames.com/content/newsletter">SCG Newsletter</a></li>
<li><a href="https://www.youtube.com/user/starcitygamesvideo">SCG on YouTube</a></li>
<li><a href="http://www.scglive.com/" target="_blank">SCGLive<sup>&reg;</sup></a></li>
</ul>
<header>ARCHIVES</header>
<ul>
<li><a href="http://www.starcitygames.com/tags/">Search our Articles</a></li>
<li><a href="http://www.starcitygames.com/content/archive">Coverage Archives</a></li>
<li><a href="http://www.starcitygames.com/rss/rssfeed.xml">RSS Feed</a></li>
</ul>
</nav>
<div style="clear:both;"></div>
 
<div id='div-gpt-ad-1460054248647-0' style='height:90px; width:728px; margin-left:auto; margin-right:auto'>
<script type='text/javascript'>
                        googletag.cmd.push(function() { googletag.display('div-gpt-ad-1460054248647-0'); });
                    </script>
</div>
<div id="tagline">All original content on this page is &copy; 2016 StarCityGames.com<sup>&reg;</sup> and may not be used or reproduced without consent. Wizards of the Coast, Magic: The Gathering, and their logos are trademarks of Wizards of the Coast LLC. &copy; 2016 Wizards. All rights reserved. StarCityGames.com<sup>&reg;</sup> is not affiliated with, endorsed, sponsored, or specifically approved by Wizards of the Coast LLC. StarCityGames.com<sup>&reg;</sup> may use the trademarks and other intellectual property of Wizards of the Coast LLC, which is permitted under <a href="http://wpn.wizards.com/en/document/digital-marketing-asset-policy">Wizards' Digital Marketing Asset Policy</a>. MAGIC: THE GATHERING® is a trademark[s] of Wizards of the Coast. For more information about Wizards of the Coast or any of Wizards' trademarks or other intellectual property, please visit their website at (<a href="http://www.wizards.com">www.wizards.com</a>).</div>
</footer>
</BODY>
</HTML>
    http_version: 
  recorded_at: Mon, 18 Apr 2016 10:54:44 GMT
recorded_with: VCR 3.0.1
